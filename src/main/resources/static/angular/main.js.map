{"version":3,"sources":["./src/app/my-paginator.ts","./src/app/server/bridge.service.ts","./src/app/class.ts","./src/app/server/order.service.ts","./src/app/server/brand.service.ts","./src/app/components/buy/buy.component.ts","./src/app/components/buy/buy.component.html","./src/app/components/buy/add-dialog.html","./src/app/components/buy/ok-dialog.html","./src/app/server/shared.service.ts","./src/app/components/hero-add/hero-add.component.ts","./src/app/components/hero-add/hero-add.component.html","./src/environments/environment.ts","./src/app/components/hero-list/hero-list.component.ts","./src/app/components/hero-list/hero-list.component.html","./src/app/components/hero-top/hero-top.component.html","./src/app/components/hero-top/hero-top.component.ts","./src/app/in-memory-data.service.ts","./src/app/components/good-add/good-add.component.ts","./src/app/components/good-add/good-add.component.html","./src/app/components/brand-list/brand-list.component.ts","./src/app/components/brand-list/brand-list.component.html","./src/app/components/hero-search/hero-search.component.ts","./src/app/components/hero-search/hero-search.component.html","./src/app/components/sort-add/sort-add.component.ts","./src/app/components/sort-add/sort-add.component.html","./src/app/components/car/car.component.ts","./src/app/components/car/car.component.html","./src/app/components/car/submit-dialog.html","./src/app/components/car/ok-dialog.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/bridge-list/bridge-list.component.ts","./src/app/components/bridge-list/bridge-list.component.html","./src/app/components/good-detail/good-detail.component.ts","./src/app/components/good-detail/good-detail.component.html","./src/app/components/user/login.guard.ts","./src/app/server/buy.service.ts","./src/app/components/report/report.component.ts","./src/app/components/report/report.component.html","./src/app/components/client-detail/client-detail.component.ts","./src/app/components/client-detail/client-detail.component.html","./src/app/app.module.ts","./src/app/hero.service.ts","./src/app/components/order-list/order-list.component.ts","./src/app/components/order-list/order-list.component.html","./src/app/components/client-add/client-add.component.ts","./src/app/components/client-add/client-add.component.html","./src/app/components/brand-add/brand-add.component.ts","./src/app/components/brand-add/brand-add.component.html","./src/app/server/client.service.ts","./src/app/components/brand-detail/brand-detail.component.ts","./src/app/components/brand-detail/brand-detail.component.html","./src/app/components/good-list/good-list.component.ts","./src/app/components/good-list/good-list.component.html","./src/app/components/order-detail/order-detail.component.html","./src/app/components/order-detail/order-detail.component.ts","./src/app/components/bridge-detail/bridge-detail.component.ts","./src/app/components/bridge-detail/bridge-detail.component.html","./src/app/components/order-add/order-add.component.ts","./src/app/components/order-add/order-add.component.html","./src/app/components/client-list/client-list.component.ts","./src/app/components/client-list/client-list.component.html","./src/app/app-routing.module.ts","./src/app/components/bridge-add/bridge-add.component.ts","./src/app/components/bridge-add/bridge-add.component.html","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { MatPaginatorIntl } from '@angular/material/paginator';\r\n\r\n\r\nconst dutchRangeLabel = (page: number, pageSize: number, length: number) => {\r\n  if (length === 0 || pageSize === 0) { return `0 到 ${length}`; }\r\n  length = Math.max(length, 0);\r\n  const startIndex = page * pageSize;\r\n  const endIndex = startIndex < length ?\r\n    Math.min(startIndex + pageSize, length) :\r\n    startIndex + pageSize;\r\n  return `第${startIndex + 1} - ${endIndex} 共 ${length}条`;\r\n\r\n}\r\n\r\nexport function myPaginator() {\r\n\r\n  const paginatorIntl = new MatPaginatorIntl();\r\n\r\n  paginatorIntl.itemsPerPageLabel = '最大显示:';\r\n\r\n  paginatorIntl.nextPageLabel = '下一页:';\r\n\r\n  paginatorIntl.previousPageLabel = '上一页:';\r\n\r\n  paginatorIntl.lastPageLabel = '尾页';\r\n\r\n  paginatorIntl.firstPageLabel = '首页';\r\n\r\n  paginatorIntl.getRangeLabel =  (page: number, pageSize: number, length: number) => {\r\n    if (length === 0 || pageSize === 0) {\r\n      return '0 od' + length;\r\n    }\r\n \r\n    length = Math.max(length, 0);\r\n    const startIndex = page * pageSize;\r\n    const endIndex = startIndex < length\r\n                      ? Math.min(startIndex + pageSize, length)\r\n                      : startIndex + pageSize;\r\n    return `第${startIndex + 1}-${endIndex}条, 总共${length}条`;\r\n  }\r\n;\r\n  return paginatorIntl;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Bridge, Goods, MonitoringContent } from '../class';\nimport * as $ from 'jquery'\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BridgeService {\n  operation:string[]=[\n    'Bridge',\n    'Monitor',\n    'RegularMonitoring',\n    'BridgeMonitoring',\n    'DailyInspection',\n    'ConditionAssessment'\n  ]\n  private headers: HttpHeaders;\n  constructor(private http: HttpClient) {\n    this.headers = new HttpHeaders();\n    this.headers.set('Content-Type', 'application/json');\n   }\n\n  getCol(operation:string):string[]{\n    let col:string[];\n    let url=\"http://localhost:8080/Bridge/BridgeServlet\"\n    $.ajax({\n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: operation,\n      success: function (data) {\n        if (data) {\n          col=data;\n        }\n        else {\n        }\n      }\n    })\n    return col\n  }\n  getColOfBridge():string[]{//获取 桥梁基本信息 col\n    let col:string[];\n    let url=\"http://localhost:8080/Bridge/BridgeServlet\"\n    let operation:string='getColOfBridge'\n    $.ajax({\n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: operation,\n      success: function (data) {\n        if (data) {\n          col=data;\n        }\n        else {\n        }\n      }\n    })\n    return col\n  }\n\n  getColOfMonitor():string[]{//获取 检测内容 col\n    let col:string[];\n    let url=\"http://localhost:8080/Bridge/BridgeServlet\"\n    let operation:string='getColOfMonitor'\n    $.ajax({\n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: operation,\n      success: function (data) {\n        if (data) {\n          col=data;\n        }\n        else {\n        }\n      }\n    })\n    return col\n  }\n\n  getColOfRegularMonitoring():string[]{//获取 定期监测 col\n    let col:string[];\n    let url=\"http://localhost:8080/Bridge/BridgeServlet\"\n    let operation:string='getColOfRegularMonitoring'\n    $.ajax({\n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: operation,\n      success: function (data) {\n        if (data) {\n          col=data;\n        }\n        else {\n        }\n      }\n    })\n    return col\n  }\n  fun(data:any):string[]{\n    return null\n  }\n  getColOfBridgeMonitoring(type:string):string[]{//获取 各桥型检测内容 col\n    let url=\"http://localhost:8080/Bridge/BridgeServlet\"\n    let operation:string='getColOfBridgeMonitoring'\n    var data={\n      \"operation\":operation,\n      \"type\": type\n    }\n    var col:string[]=[]\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data.results.length>0) {\n          col=data.results\n        }\n        else {\n          col=null\n        }\n      }\n    })\n     return col\n  }\n  \n  getColOfDailyInspection():string[]{//获取 日常巡检 col\n    let col:string[];\n    let url=\"http://localhost:8080/Bridge/BridgeServlet\"\n    let operation:string='getColOfDailyInspection'\n    $.ajax({\n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: operation,\n      success: function (data) {\n        if (data) {\n          col=data;\n        }\n        else {\n        }\n      }\n    })\n    return col\n  }\n\n  getColOfConditionAssessment():string[]{//获取 状态评估 col\n    let col:string[];\n    let url=\"http://localhost:8080/Bridge/BridgeServlet\"\n    let operation:string='getColOfConditionAssessment'\n    $.ajax({\n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: operation,\n      success: function (data) {\n        if (data) {\n          col=data;\n        }\n        else {\n        }\n      }\n    })\n    return col\n  }\n\n\n\n            //监测相关方法\n\n\n\n  getMonitoringContentData(type:string):MonitoringContent[]{//获取指定类型桥梁检测数据\n    let url=\"http://localhost:8080/Bridge/BridgeServlet\"\n    let operation:string='getMonitoringContentData'\n    var data={\n      \"operation\":operation,\n      \"type\":type\n    }\n    var col:MonitoringContent[]=[]\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          col=data.results\n        }\n        else {\n          col=null\n        }\n      }\n    })\n     return col\n  }\n\n  getMonitoringContentByBridgeNo(no:string):Observable<MonitoringContent[]>{\n    let url=\"http://localhost:8080/Bridge/BridgeServlet\"\n    let operation:string='getMonitoringContentByBridgeNo'\n    var data={\n      \"operation\":operation,\n      \"no\":no\n    }\n    let col;\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          col=of(data.results)\n        }\n        else {\n          col=null\n        }\n      }\n    })\n     return col\n  }\n\n\n\n  //桥梁相关方法\n\n\n\n\n  getAllBridge():Observable<Bridge[]>{//获取所有桥\n    let url=\"http://localhost:8080/Bridge/BridgeServlet\"\n    let operation:string='getAllBridge'\n    var data={\n      \"operation\":operation,\n    }\n    let col;\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          col=of(data.results)\n        }\n        else {\n          col=null\n        }\n      }\n    })\n     return col\n  }\n\n  getBridgeByNo(no:string):Observable<Bridge>{\n    let url=\"http://localhost:8080/Bridge/BridgeServlet\"\n    let operation:string='getBridgeByNo'\n    var data={\n      \"operation\":operation,\n      \"no\":no\n    }\n    let col;\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          col=of(data.results)\n        }\n        else {\n          col=null\n        }\n      }\n    })\n     return col\n  }\n\n\n  getAllBridgeType():string[]{//获取所有桥梁类型以及编号\n    let url=\"http://localhost:8080/Bridge/BridgeServlet\"\n    let operation:string='getAllBridgeType'\n    var data={\n      \"operation\":operation,\n    }\n    var col:string[]=[]\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          col=data.results\n        }\n        else {\n          col=null\n        }\n      }\n    })\n     return col\n  }\n\n\n  getAllGoods(key:string):Observable<Goods[]>{\n    let url=\"http://localhost:8080/Merchandising/GoodsServlet\"\n    let operation:string='getAllGoods'\n    var data={\n      \"operation\":operation,\n      \"key\":key\n    }\n    let col:any;\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          col=of(data.results)\n\n        }\n        else {\n          col=null\n        }\n      }\n    })\n     return col\n  }\n\n  getBrands():Observable<string[]>{//获取所有桥梁类型以及编号\n    let url=\"http://localhost:8080/Merchandising/GoodsServlet\"\n    let operation:string='getBrands'\n    var data={\n      \"operation\":operation,\n    }\n    var col:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          col=of(data.results)\n        }\n        else {\n          col=of(null)\n        }\n      }\n    })\n     return col\n  }\n\n  findGoodByNo(no:string):Observable<Goods>{\n    let url=\"http://localhost:8080/Merchandising/GoodsServlet\"\n    let operation:string='findGoodByNo'\n    var data={\n      \"operation\":operation,\n      \"no\":no\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          res=of(data.results)\n        }\n        else {\n          res=null\n        }\n      }\n    })\n     return res\n  }\n\n  addGood(g:Goods):Observable<boolean>{\n    let url=\"http://localhost:8080/Merchandising/GoodsServlet\"\n    let operation:string='addGood'\n    var data={\n      \"operation\":operation,\n      \"g\":g\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data.results==true) {\n          res=of(true)\n        }\n        else {\n          res=of(false)\n        }\n      }\n    })\n    return res;\n  }\n\n  deleteGoods(no:string):Observable<boolean>{\n    let url=\"http://localhost:8080/Merchandising/GoodsServlet\"\n    let operation:string='deleteGoods'\n    var data={\n      \"operation\":operation,\n      \"no\":no\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data.results==true) {\n          res=of(true)\n        }\n        else {\n          res=of(false)\n        }\n      }\n    })\n    return res;\n  }\n\n  updateGoods(g:Goods):Observable<boolean>{\n    let url=\"http://localhost:8080/Merchandising/GoodsServlet\"\n    let operation:string='updateGoods'\n    var data={\n      \"operation\":operation,\n      \"g\":g\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data.results==true) {\n          res=of(true)\n        }\n        else {\n          res=of(false)\n        }\n      }\n    })\n    return res;\n  }\n\n  getSorts():Observable<string[]>{\n    let url=\"http://localhost:8080/Merchandising/GoodsServlet\"\n    let operation:string='getSorts'\n    var data={\n      \"operation\":operation,\n    }\n    var col:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          col=data.results\n        }\n        else {\n          col=null\n        }\n      }\n    })\n     return of(col)\n  } \n\n  addSort(no:string):Observable<boolean>{\n    let url=\"http://localhost:8080/Merchandising/GoodsServlet\"\n    let operation:string='addSort'\n    var data={\n      \"operation\":operation,\n      \"sort\":no\n    }\n    var col:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          col=data.results\n        }\n        else {\n          col=null\n        }\n      }\n    })\n     return of(col)\n  }\n}\n","export class Hero {\r\n  id: number;\r\n  name: string;\r\n  top: boolean;\r\n};\r\nexport class MonitoringContent {\r\n  no: String;//编号\r\n  bridgeBoard: String;//桥名牌\r\n  bridgeDeckPavement: String;//桥面铺装\r\n  telescopicDevice: String;//伸缩装置\r\n  drainageFacilities: String;//排水设施\r\n  sideWalk: String;//人行道\r\n  railing: String;//栏杆护栏\r\n  mainBeam: String;//主梁\r\n  trussGirder: String;//桁梁\r\n  beam: String;//横梁\r\n  transverseConnection: String;//横向连接\r\n  masterNode: String;//主节点\r\n  connector: String;//连接件\r\n  support: String;//支座\r\n  cappingBeam: String;//盖梁\r\n  pierShaft: String;//墩身\r\n  tableCap: String;//台帽\r\n  platformBody: String;//台身\r\n  earWall: String;//耳墙\r\n  base: String;//基础\r\n  riverBedScouring: String;//河床冲刷情况\r\n  undergroundPassage: String;//地下通道及附属设施\r\n  exteriorTrimPanel: String;//外部装饰板\r\n}\r\n\r\nexport class Bridge {\r\n  bridgeNo: string;//桥梁编号\r\n  bridgeName: string;//桥梁名称\r\n  bridgeTypeNo: string;//桥梁类型编号\r\n  dateTime: string;//建成日期\r\n  managementUnit: string;//管理单位\r\n  bridgeLevel: string;//桥梁等级\r\n  cost: string;//总造价\r\n  expansionJointType: string;//伸缩缝型式\r\n  sideWalkLength: number;//人行道净宽\r\n  roadWayLength: number;//车行道净宽\r\n  railingLength: number;//栏杆总长\r\n  pierElevation: number;//桥墩标高\r\n  cappingBeamSize: number;//盖梁尺寸\r\n  basalElevation: number;//基底标高\r\n  floorSize: number;//底板尺寸\r\n  abutmentElevation: number;//桥台标高\r\n  abutmentNumber: number;//桥台数量\r\n  expansionJointNumber: number;//伸缩缝数量\r\n  length: number;//跨越长度\r\n  wide: number;//跨越宽度\r\n}\r\n\r\nexport class Goods {\r\n  public no: string//编号\r\n  public bname: string//品牌名称\r\n  public name: string//名称\r\n  public unit: string//单位\r\n  public p1: number//市场价\r\n  public p2: number//销售价\r\n  public p3: number//成本价\r\n  public introduction: string//商品介绍\r\n  public stock: number//库存\r\n  sort:string\r\n}\r\n\r\nexport class Brand {\r\n  name: string;\r\n  url: string\r\n}\r\n\r\nexport class Client {\r\n  no: string;\r\n  name: string;\r\n  address: string\r\n  tNumber: string\r\n  password:string\r\n  root:string\r\n}\r\n\r\nexport class Order {\r\n  no: string\r\n  cNo: string\r\n  postcode: string\r\n  date: string\r\n  amount: number\r\n}\r\n\r\nexport class OrderDetail {\r\n  no: string;\r\n  oNo: string;\r\n  gNo: string;\r\n  n: number;\r\n  amount: number;\r\n  price: number;\r\n}\r\nexport class tmpGood {\r\n  id: string\r\n  g: Goods\r\n  n: number\r\n}","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Order, OrderDetail } from '../class';\nimport * as $ from 'jquery'\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  constructor() { }\n  getAllOrders():Observable<Order[]>{\n    let url=\"http://localhost:8080/Merchandising/OrderServlet\"\n    let operation:string='getAllOrders'\n    var data={\n      \"operation\":operation,\n    }\n    var col:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          col=of(data.results)\n        }\n        else {\n          col=null\n        }\n      }\n    })\n     return col\n  }\n\n  getOrders(key:string):Observable<Order[]>{//获取所有桥梁类型以及编号\n    let url=\"http://localhost:8080/Merchandising/OrderServlet\"\n    let operation:string='getOrders'\n    var data={\n      \"operation\":operation,\n      \"key\":key\n    }\n    let col:any;\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          col=of(data.results)\n\n        }\n        else {\n          col=null\n        }\n      }\n    })\n     return col\n    \n  }\n\n  findOrderByNo(no:string):Observable<Order>{\n    let url=\"http://localhost:8080/Merchandising/OrderServlet\"\n    let operation:string='findOrderByNo'\n    var data={\n      \"operation\":operation,\n      \"no\":no\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          res=of(data.results)\n        }\n        else {\n          res=null\n        }\n      }\n    })\n     return res\n  }\n\n  addOrder(o:Order):Observable<boolean>{\n    let url=\"http://localhost:8080/Merchandising/OrderServlet\"\n    let operation:string='addOrder'\n    var data={\n      \"operation\":operation,\n      \"o\":o\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data.results==true) {\n          res=of(true)\n        }\n        else {\n          res=of(false)\n        }\n      }\n    })\n    return res;\n  }\n\n  deleteOrder(no:string):Observable<boolean>{\n    let url=\"http://localhost:8080/Merchandising/OrderServlet\"\n    let operation:string='deleteOrder'\n    var data={\n      \"operation\":operation,\n      \"no\":no\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data.results==true) {\n          res=of(true)\n        }\n        else {\n          res=of(false)\n        }\n      }\n    })\n    return res;\n  }\n\n  updateOrder(o:Order):Observable<boolean>{\n    let url=\"http://localhost:8080/Merchandising/OrderServlet\"\n    let operation:string='updateOrder'\n    var data={\n      \"operation\":operation,\n      \"o\":o\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data.results==true) {\n          res=of(true)\n        }\n        else {\n          res=of(false)\n        }\n      }\n    })\n    return res;\n  }\n\n  addOrderDetail(o:OrderDetail):Observable<boolean>{\n    let url=\"http://localhost:8080/Merchandising/OrderServlet\"\n    let operation:string='addOrderDetail'\n    var data={\n      \"operation\":operation,\n      \"o\":o\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data.results==true) {\n          res=of(true)\n        }\n        else {\n          res=of(false)\n        }\n      }\n    })\n    return res;\n  }\n\n  getOrderDetailByNo(no:string):Observable<OrderDetail[]>{\n    let url=\"http://localhost:8080/Merchandising/OrderServlet\"\n    let operation:string='getOrderDetailByNo'\n    var data={\n      \"operation\":operation,\n      \"no\":no\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          res=of(data.results)\n        }\n        else {\n          res=null\n        }\n      }\n    })\n     return res\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Brand } from '../class';\nimport * as $ from 'jquery'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandService {\n\n  constructor() { }\n\n  getAllBrand():Observable<Brand[]>{\n    let url=\"http://localhost:8080/Merchandising/BrandServlet\"\n    let operation:string='getAllBrand'\n    var data={\n      \"operation\":operation,\n    }\n    var col:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          col=of(data.results)\n        }\n        else {\n          col=null\n        }\n      }\n    })\n     return col\n  }\n\n  getBrands(key:string):Observable<Brand[]>{//获取所有桥梁类型以及编号\n    let url=\"http://localhost:8080/Merchandising/BrandServlet\"\n    let operation:string='getBrands'\n    var data={\n      \"operation\":operation,\n      \"key\":key\n    }\n    let col:any;\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          col=of(data.results)\n\n        }\n        else {\n          col=null\n        }\n      }\n    })\n     return col\n    \n  }\n\n  findBrandByName(name:string):Observable<Brand>{\n    let url=\"http://localhost:8080/Merchandising/BrandServlet\"\n    let operation:string='findBrandByName'\n    var data={\n      \"operation\":operation,\n      \"name\":name\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          res=of(data.results)\n        }\n        else {\n          res=null\n        }\n      }\n    })\n     return res\n  }\n\n  addBrand(b:Brand):Observable<boolean>{\n    let url=\"http://localhost:8080/Merchandising/BrandServlet\"\n    let operation:string='addBrand'\n    var data={\n      \"operation\":operation,\n      \"b\":b\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data.results==true) {\n          res=of(true)\n        }\n        else {\n          res=of(false)\n        }\n      }\n    })\n    return res;\n  }\n\n  deleteBrand(name:string):Observable<boolean>{\n    let url=\"http://localhost:8080/Merchandising/BrandServlet\"\n    let operation:string='deleteBrand'\n    var data={\n      \"operation\":operation,\n      \"name\":name\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data.results==true) {\n          res=of(true)\n        }\n        else {\n          res=of(false)\n        }\n      }\n    })\n    return res;\n  }\n\n  updateBrand(b:Brand):Observable<boolean>{\n    let url=\"http://localhost:8080/Merchandising/BrandServlet\"\n    let operation:string='updateBrand'\n    var data={\n      \"operation\":operation,\n      \"b\":b\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data.results==true) {\n          res=of(true)\n        }\n        else {\n          res=of(false)\n        }\n      }\n    })\n    return res;\n  }\n}\n","import { Goods, tmpGood } from '../../class';\nimport { Component, OnInit, Inject,ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n\nimport { BridgeService } from '../../server/bridge.service';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport {MatDialog} from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { BuyService } from 'src/app/server/buy.service';\nimport { SharedService } from 'src/app/server/shared.service';\n\n@Component({\n    selector: 'app-buy',\n    templateUrl: './buy.component.html',\n    styleUrls: ['./buy.component.scss']\n})\nexport class BuyComponent implements OnInit {\n    selected: string = ''\n\n    allBridges: Goods[] = []\n    dataSource: MatTableDataSource<Goods>\n    displayedColumns: string[] = ['编号', '品牌名称', '名称', '单位', '销售价', '商品介绍', '库存','操作']\n\n    private searchTerms = new Subject<string>();\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    constructor(\n        private bridgeService: BridgeService,\n        public dialog: MatDialog,\n    ) { }\n\n    ngOnInit(): void {\n        this.bridgeService.getAllGoods('').subscribe((data) => {\n            this.allBridges = data;\n            this.dataSource = new MatTableDataSource<Goods>(this.allBridges);\n            this.dataSource.paginator = this.paginator;\n        })\n\n        this.searchTerms\n            .pipe(\n                // 在传出最终字符串之前，debounceTime(300) 将会等待，直到新增字符串的事件暂停了 300 毫秒\n                debounceTime(300),\n                // 确保只在过滤词变化时才发送请求\n                distinctUntilChanged(),\n                // 为每个从 debounce 和 distinctUntilChanged 中通过的搜索词调用搜索服务。\n                // 它会取消并丢弃以前的搜索可观察对象，只保留最近的\n                switchMap((term: string) => this.bridgeService.getAllGoods(term)),\n            )\n            .subscribe((data => {\n                this.allBridges = data;\n                this.dataSource = new MatTableDataSource<Goods>(this.allBridges);\n                this.dataSource.paginator = this.paginator;\n            }));\n    }\n\n    search(term: string): void {\n        this.searchTerms.next(term);\n    }\n\n    openDialog(g:Goods) {\n        const dialogRef = this.dialog.open(AddDialog,{\n            // disableClose: false,\n            // hasBackdrop: false ,\n            data: { g: g }});\n        dialogRef.afterClosed().subscribe(result => {\n        });\n    }\n\n}\n@Component({\n    selector: 'add-dialog',\n    templateUrl: 'add-dialog.html',\n    })\nexport class AddDialog {\n    goodForm: FormGroup;\n    constructor(@Inject(MAT_DIALOG_DATA) public data: {g: Goods},\n    private _formBuilder: FormBuilder,\n    private server: BuyService,\n    public dialog: MatDialog,\n    private share:SharedService,\n    ) { }\n    ngOnInit(): void {\n        this.goodForm= this._formBuilder.group({\n            n:[1,[Validators.required,Validators.max(this.data.g.stock),Validators.min(1)]]\n        })\n    }\n\n    add(){\n        this.addTmpGood(this.data.g,Number.parseInt(this.goodForm.get('n').value) )\n    }\n    addTmpGood(g:Goods,n:number){\n        let id=g.no;\n        \n        this.server.addGoods({id,g,n} as tmpGood).subscribe(()=>{\n            this.share.openSnackBar('添加成功','确定')\n        })\n    }\n}\n\n@Component({\n    selector: 'ok-dialog',\n    templateUrl: 'ok-dialog.html',\n    })\n    export class OkDialog {}","<div class=\"ml-3 mr-3 mt-1\">\n    <mat-toolbar color=\"primary\" class=\"bg\">\n      <a class=\"\" mat-button>\n        <mat-icon>home</mat-icon> 购物\n      </a>\n      <a class=\"mr-3\" mat-button>\n        <button mat-button routerLink=\"/car\"><mat-icon>add</mat-icon> 查看购物车 </button>\n      </a>\n      <span class=\"example-spacer\"></span>\n      <a class=\"mr-3\" mat-button>\n        <mat-icon>search</mat-icon> 查找\n        <mat-form-field>\n          <input matInput placeholder=\"查找内容\" #searchBox (input)=\"search(searchBox.value)\">\n         </mat-form-field>\n      </a>\n  \n      <span class=\"spacer\"></span>\n      <div class=\"example-icon row\">\n      </div>\n    </mat-toolbar>\n    <mat-sidenav-container class=\"example-container\" autosize>\n      <mat-sidenav #drawer class=\"example-sidenav\" mode=\"side\">\n        <mat-action-list>\n          <button mat-list-item routerLink=\"/good-add\"> 添加商品 </button>\n          <button mat-list-item (click)=\"null\"> 日常巡检 </button>\n          <button mat-list-item (click)=\"null\"> 定期检测 </button>\n          <button mat-list-item (click)=\"null\"> 状况评估 </button>\n        </mat-action-list>\n      </mat-sidenav>\n      <mat-sidenav-content class=\"example-sidenav-content\">\n        <div class=\"z-depth-2\">\n          <mat-table [dataSource]=\"dataSource\">\n            <ng-container matColumnDef=\"编号\">\n              <mat-header-cell *matHeaderCellDef class=\"\">编号</mat-header-cell>\n              <mat-cell *matCellDef=\"let row\"> {{row.no}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"品牌名称\">\n              <mat-header-cell *matHeaderCellDef class=\"\"><span> 品牌名称</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let row\"> {{row.bname}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"名称\">\n              <mat-header-cell *matHeaderCellDef class=\"\"> 名称 </mat-header-cell>\n              <mat-cell *matCellDef=\"let row\"> {{row.name}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"单位\">\n              <mat-header-cell *matHeaderCellDef class=\"\"> 单位 </mat-header-cell>\n              <mat-cell *matCellDef=\"let row\"> {{row.unit}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"销售价\">\n              <mat-header-cell *matHeaderCellDef class=\"\"> 销售价 </mat-header-cell>\n              <mat-cell *matCellDef=\"let row\"> {{row.p2}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"商品介绍\">\n              <mat-header-cell *matHeaderCellDef class=\"\"> 商品介绍 </mat-header-cell>\n              <mat-cell *matCellDef=\"let row\"> {{row.introduction}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"库存\">\n              <mat-header-cell *matHeaderCellDef class=\"\">库存 </mat-header-cell>\n              <mat-cell *matCellDef=\"let row\"> {{row.stock}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"操作\">\n                <mat-header-cell *matHeaderCellDef class=\"\">操作 </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\"> \n                    <button class=\"bg1\" *ngIf=\"row.stock>0\"  mat-flat-button color=\"primary\" (click)=\"openDialog(row)\">\n                      <mat-icon>shopping_cart</mat-icon> 加入购物车</button>\n                      <button *ngIf=\"row.stock<=0\" mat-flat-button color=\"warn\" disabled=\"true\"><mat-icon>remove_shopping_cart</mat-icon>已售完</button>\n                    </mat-cell>\n              </ng-container>\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n            <mat-row  *matRowDef=\"let row; columns: displayedColumns;\">\n            </mat-row>\n          </mat-table>\n        </div>\n        <mat-paginator [length]=10 [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  \n  </div>\n  ","<div matRipple [matRippleCentered]=\"true\">\r\n    <h2 mat-dialog-title>选择数量</h2>\r\n    <mat-dialog-content >\r\n        <form [formGroup]='goodForm'>\r\n            <p>当前库存: {{data.g.stock}}</p>\r\n            <mat-form-field class=\"c2\">\r\n                <input type=\"number\" matInput formControlName='n' required>\r\n            </mat-form-field> \r\n            <mat-error>\r\n                <span\r\n                    *ngIf=\"!goodForm.get('n').valid && goodForm.get('n').touched\">请输入正确的数值</span>\r\n            </mat-error>\r\n        </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n    <button mat-flat-button color=\"warn\" mat-dialog-close>取消</button>\r\n    <button mat-flat-button  color=\"primary\" [disabled]=\"!goodForm.valid\" [mat-dialog-close]=\"true\" cdkFocusInitial (click)=\"add()\">确定</button>\r\n    </mat-dialog-actions>\r\n</div>\r\n","<h1 mat-dialog-title>提示</h1>\r\n<mat-dialog-content>\r\n    <p>成功添加到购物车</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close>确定</button>\r\n</mat-dialog-actions>   ","import { Injectable, NgZone } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Client } from '../class';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n// 是否正在HTTP请求, 在拦截器中设置\nisLoading = false;\n// 是否登录了\nisLogined = false;\n// 登录后的用户名, 显示在页面右上角\nloginUsername: string;\n// 保存用户的令牌\nroot: string='root';\n// 保存用户登录前要去的url以登录成功后导向。默认首页。\nredirectUrl = '/buy';\n// 错误消息\nerrorMessage = '';\n\nclient:Client\n  constructor(\n    private snackBar: MatSnackBar,\n    private router: Router,\n    private zone: NgZone,\n  ) { }\n  loginedConfig(loginUsername: string, c:Client): void {\n    this.isLogined = true;\n    this.loginUsername = loginUsername;\n    // this.autoRefreshToken();\n    // const expiry = (JSON.parse(atob(token.split('.')[1]))).exp;\n    // console.log(expiry);\n    // console.log((Math.floor(Date.now() / 1000)));\n\n    // You might be tempted to persist it in localstorage or cookies;\n    // don’t do it! This is prone to XSS or CSRF attacks.\n    // 参见https://hasura.io/blog/best-practices-of-using-jwt-with-graphql/\n    // 改为规定格式，以后直接取token使用，无需改变\n    // \"Authorization\": \"Bearer eyJhbGcivzz_Mew11YNsCKxzFKqUL1EMNMiuNsX2_OdDyk-JZQ\"\n    this.client=c;\n    this.root=c.root\n    this.openSnackBar(`欢迎用户${loginUsername}`,'');\n    // 登录成功，导向原先想去的url，否则显示列表\n    this.router.navigateByUrl(this.redirectUrl);\n  }\n  logoutConfig(): void {\n    this.openSnackBar(`${this.loginUsername}退出成功！`,'');\n    this.isLogined = false;\n    this.loginUsername = '';\n    this.root=''\n    // this.redirectUrl = '/hero-list';\n    // this.router.navigateByUrl(this.redirectUrl);\n    this.router.navigate(['user']);\n  }\n  openSnackBar(info: string,action:string): void {\n    this.snackBar.open(info, action,{\n      duration: 1.5 * 1000,\n      });\n  }\n}\n","\nimport { HeroService } from '../../hero.service';\nimport { Hero } from '../../class';\nimport { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-hero-add',\n  templateUrl: './hero-add.component.html',\n  styleUrls: ['./hero-add.component.scss']\n})\nexport class HeroAddComponent implements OnInit {\n  hero:Hero;\n  heroForm: FormGroup;\n  options: FormGroup;\n  constructor(\n    //private router: Router,\n    private heroService: HeroService,\n    private formBuilder: FormBuilder,\n    //private sharedService: SharedService,\n    private location: Location,) { \n  }\n\n  ngOnInit() {\n    this.hero={\n      id:HeroService.number,\n      name:'',\n      top:true\n    }\n    this.heroForm = this.formBuilder.group({\n      // id: ['', Validators.required],\n      name: ['', [Validators.required, Validators.minLength(1)]],\n      top: [true],\n    });\n  }\n  onFormSubmit() {\n    // heroForm.value即上面构建的Hero对象\n    //this.heroService.addHero(this.heroForm.value);\n     this.add(this.heroForm.get('name').value,this.heroForm.get('top').value)\n  }\n  add(name: string, top: boolean): void {\n    this.heroService.addHero({name, top } as Hero)\n    .subscribe(() => this.goBack());\n    alert(\"保存成功\")\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n}\n","<!-- \n\n<div [config]=\"{ show: true }\" mdbModal #addHeroModal=\"mdb-modal\" class=\"modal fade\" (onHidden)=\"goBack()\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog cascading-modal\" role=\"document\">    \n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-default darken-3 white-text\">\n          <h4 class=\"title\">\n            <i class=\"fa fa-user-plus\"></i> 请填写英雄信息</h4>\n          <button type=\"button\" class=\"close waves-effect waves-light\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"goBack()\">\n            <span aria-hidden=\"true\">×</span>\n          </button>\n        </div>\n        <div class=\"modal-body mb-0\">\n          <form role=\"form\">\n            <div class=\"md-form form-sm\">\n              <i class=\"fa fa-user-circle prefix text-deault\"></i>\n              <input mdbActive type=\"text\" id=\"formNo\" class=\"form-control text-center\" #no required>\n              <label class=\"text-default\" for=\"formNo\">编号</label>\n            </div>\n  \n            <div class=\"md-form form-sm\">\n              <i class=\"fas fa-address-card prefix text-default\"></i>\n              <input mdbActive type=\"text\" id=\"formName\" class=\"form-control text-center\" #name required>\n              <label class=\"text-default\" for=\"formName\">姓名</label>\n            </div>\n            <div class=\"md-form form-sm\">\n              <i class=\"fas fa-thumbs-up prefix text-default\"></i>\n              <label for=\"checkbox1\">顶级英雄？</label>\n              <input type=\"checkbox\" id=\"checkbox1\" #isTop>\n            </div>\n            <hr>\n            <div class=\"text-center mt-1-half\">\n              <button type=\"submit\" class=\"btn btn-sm btn-info my-0 z-depth-2\" mdbRippleRadius (click)=\"add(no.value,name.value,isTop.checked);addHeroModal.hide();no.value='';name.value='';isTop.checked=false\">\n                <i class=\"fas fa-plus ml-1\"> 添加</i>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div> -->\n<!--Modal: Add Hero form-->\n<mat-card class=\"mycard z-depth-3\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n  </mat-card-header>\n  <mat-card-title style=\"text-align: center;\" >英雄信息</mat-card-title>\n  <form [formGroup]=\"heroForm\" (ngSubmit)=\"onFormSubmit()\">\n    <mat-form-field class=\"full-width\">\n        <mat-label>英雄编号</mat-label>\n        <input matInput disabled  value={{hero.id}}>\n\n      <!-- <input matInput placeholder=\"编号\" formControlName=\"id\" required>\n      <mat-error>\n        <span *ngIf=\"!heroForm.get('id').valid && heroForm.get('id').touched\">请输入编号</span>\n      </mat-error> -->\n    </mat-form-field>\n    <mat-form-field class=\"full-width hoverable\"  appearance=\"fill\">\n      <mat-label>英雄姓名</mat-label>\n      <input matInput placeholder=\"英雄姓名(>1)\" formControlName=\"name\" required>\n      <mat-icon matPrefix>person</mat-icon>\n      <mat-error>\n        <span *ngIf=\"!heroForm.get('name').valid && heroForm.get('name').touched\">英雄请留名</span>\n      </mat-error>\n    </mat-form-field>\n   \n    <div class=\"full-width\">\n      <mat-checkbox formControlName=\"top\" color=\"warn\">顶级英雄?</mat-checkbox>\n    </div>\n    <div style=\"text-align: center;\">\n      <span class=\"flat-button mr-4\">\n        <button type=\"submit\" [disabled]=\"!heroForm.valid\" mat-raised-button color=\"primary\" matTooltip=\"保存英雄\">\n          <mat-icon>save</mat-icon>保 存\n        </button>\n      </span>\n      <span class=\"flat-button\">\n        <a mat-raised-button color=\"warn\" matTooltip=\"放弃\" (click)=\"goBack()\">\n          <mat-icon>cancel</mat-icon>取 消\n        </a>\n      </span>\n    </div>\n  </form>\n</mat-card>\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Hero,MonitoringContent } from '../../class';\nimport { HeroService } from '../../hero.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { MatSort } from '@angular/material/sort';\nimport { BridgeService } from '../../server/bridge.service';\n\n@Component({\n  selector: 'app-hero-list',\n  templateUrl: './hero-list.component.html',\n  styleUrls: ['./hero-list.component.scss']\n})\nexport class HeroListComponent implements OnInit {\n  navigationSubscription;\n\n  dataSource:MatTableDataSource<MonitoringContent>\n  displayedColumns: string[]\n\n  @ViewChild(MatPaginator, { static: true })  // 分页器\n  paginator: MatPaginator;\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private bridgeService:BridgeService\n  ) {\n    this.navigationSubscription = this.router.events.subscribe((event: any) => {\n      if (event instanceof NavigationEnd) {\n        this.initLoad();\n      }\n    })\n  }\n  initLoad() {\n    let type: string = (this.route.snapshot.paramMap.get('type')) ;\n    this.dataSource = new MatTableDataSource<MonitoringContent>(this.bridgeService.getMonitoringContentData(type));\n    this.dataSource.paginator = this.paginator;\n    this.displayedColumns=this.bridgeService.getColOfBridgeMonitoring(type)\n\n  }\n  ngOnInit() {\n    this.initLoad()\n  }\n  ngOnDestroy() {\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n  setDisplayedColumns(operation:string):string[]{\n    return this.bridgeService.getCol(operation)\n  }\n\n\n\n}\n","<!-- <mat-sidenav-container class=\"example-container\" autosize>\n  <mat-sidenav #drawer class=\"example-sidenav\" mode=\"side\">\n    <mat-action-list>\n      <button mat-list-item (click)='f()'> Save </button>\n      <button mat-list-item (click)='f()'> Undo </button>\n    </mat-action-list>\n  </mat-sidenav>\n\n  <mat-sidenav-content class=\"example-sidenav-content\">\n    <div class=\"example-sidenav-content\">\n      <button type=\"button\" mat-button (click)=\"drawer.toggle()\">\n        Toggle sidenav\n      </button>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container> -->\n<div class=\" z-depth-2\">\n  <mat-table [dataSource]=\"dataSource\" matSort>\n    <ng-container matColumnDef=\"类型\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg size\"> 类型 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\" > {{row.no[0]=='D'?'定期':'日常'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"编号\">\n      <mat-header-cell *matHeaderCellDef  mat-sort-header class=\"bg size\"> 编号 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\" class=\"size\"> {{row.no}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"桥名牌\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg text-align:center\"> 桥名牌 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\" class=\"\">{{row.bridgeBoard?row.bridgeBoard:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"桥面铺装\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 桥面铺装 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.bridgeDeckPavement?row.bridgeDeckPavement:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"伸缩装置\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 伸缩装置 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.telescopicDevice?row.telescopicDevice:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"排水设施\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 排水设施 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.drainageFacilities?row.drainageFacilities:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"人行道\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 人行道 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.sideWalk?row.sideWalk:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"栏杆护栏\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 栏杆护栏 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.railing?row.railing:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"主梁\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 主梁 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.mainBeam?row.mainBeam:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"桁梁\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 桁梁 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.trussGirder?row.trussGirder:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"横梁\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 横梁 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.beam?row.beam:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"横向连接\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 横向连接 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.transverseConnection?row.transverseConnection:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"主节点\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 主节点 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.masterNode?row.masterNode:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"连接件\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 连接件 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.connector?row.connector:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"支座\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 支座 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.support?row.support:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"盖梁\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 盖梁 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.cappingBeam?row.cappingBeam:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"墩身\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 墩身 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.pierShaft?row.pierShaft:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"台帽\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 台帽 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.tableCap?row.tableCap:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"台身\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 台身 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.platformBody?row.platformBody:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"耳墙\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 耳墙 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.earWall?row.earWall:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"基础\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 基础 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.base?row.base:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"河床冲刷情况\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 河床冲刷情况 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.riverBedScouring?row.riverBedScouring:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"地下通道及附属设施\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 地下通道 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.undergroundPassage?row.undergroundPassage:'无'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"外部装饰板\">\n      <mat-header-cell *matHeaderCellDef  class=\"bg \"> 外部装饰板 </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">{{row.exteriorTrimPanel?ow.exteriorTrimPanel:'无'}}\n        <!-- <a class=\"btn btn-sm btn-info my-0 mr-3 hoverable\" routerLink=\"/hero-detail/{{row.id}}\">\n          <i class=\"fa fa-edit\"> 编辑</i>\n        </a>\n        <button type=\"button\" class=\"btn btn-sm btn-danger hoverable\" (click)=\"delete(row.id)\">\n          <i class=\"fa fa-trash\"> 删除</i>\n        </button> -->\n      </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row class=\"hoverable\" *matRowDef=\"let row; columns: displayedColumns;\" [routerLink]=\"['/hero-detail/', row.id]\">\n    </mat-row>\n  </mat-table>\n</div>\n<mat-paginator [length]=10 [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>","\n<div class=\"row mt-5 pt-5 animated fadeInRight\">\n    <div class=\"card col-5 mt-2 pt-2 mr-2 hoverable\" *ngFor=\"let topHero of topHeroes\">\n      <div class=\"card-header bg lighten-1 white-text text-center\">\n        顶级英雄-{{topHero.no}}\n      </div>\n      <div class=\"card-body\">\n        <h4 class=\"card-title\">{{topHero.name}}</h4>\n        <p class=\"card-text text-truncate\">{{topHero.description}}</p>\n        <div class=\"text-center\">\n          <a class=\"btn btn-deep-orange waves-light\" routerLink=\"/hero-detail/{{topHero.id}}\" mdbRippleRadius>查看详情</a>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","\nimport { HeroService } from '../../hero.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Hero } from '../../class';\n\n@Component({\n  selector: 'app-hero-top',\n  templateUrl: './hero-top.component.html',\n  styleUrls: ['./hero-top.component.scss']\n})\nexport class HeroTopComponent implements OnInit {\n  topHeroes: Hero[];\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit() {\n    this.getTopHeroes();\n  }\n\n  getTopHeroes(): void {\n    this.heroService.getTopHeroes()\n      .subscribe(heroes => this.topHeroes = heroes);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { Goods,tmpGood } from './class';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    // const heroes = [\n    //   { id: 11, name: '张三',top:true },\n    //   { id: 12, name: '李四' ,top:true},\n    //   { id: 13, name: '王五' ,top:true},\n    //   { id: 14, name: '赵六' ,top:true},\n    //   { id: 15, name: '测试' ,top:false},\n    //   { id: 16, name: '测试1',top:false },\n    //   // { id: 17, name: 'Narco',top:true },\n    //   // { id: 18, name: 'Bombasto' ,top:false},\n      \n    // ];\n    // return {heroes};\n    const tmpGoods=[\n      {id: '0',g:{}as Goods,n:0}\n    ];\n      return {tmpGoods};\n  }\n\n\n  // Overrides the genId method to ensure that a hero always has an id.\n  // If the heroes array is empty,\n  // the method below returns the initial number (11).\n  // if the heroes array is not empty, the method below returns the highest\n  // hero id + 1.\n\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BridgeService } from '../../server/bridge.service';\nimport { Location } from '@angular/common';\nimport { Goods } from 'src/app/class';\nimport { SharedService } from 'src/app/server/shared.service';\n\n\ninterface b {\n  name: string\n}\n@Component({\n  selector: 'app-good-add',\n  templateUrl: './good-add.component.html',\n  styleUrls: ['./good-add.component.scss']\n})\nexport class GoodAddComponent implements OnInit {\n  goodForm: FormGroup;\n  brands: string[] = []\n  sorts:string[]=[]\n  unit: string[] = ['克', '千克', '米', '个', '条', '平方米', '毫升', '升','其他']\n\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private bridgeService: BridgeService,\n    private location: Location,\n    private share:SharedService,\n  ) { }\n  ngOnInit() {\n    this.getBrands()\n    this.bridgeService.getSorts().subscribe(data=>{\n      this.sorts=data\n    })\n    this.goodForm = this._formBuilder.group({\n      no: ['', Validators.required],\n      sort: ['',Validators.required],\n      bname: ['', Validators.required],\n      name: ['', Validators.required],\n      unit: ['', Validators.required],\n      p1: [1000, [Validators.min(0), Validators.pattern(/^\\d+$/), Validators.max(999999)]],\n      p2: [1000, [Validators.min(0), Validators.pattern(/^\\d+$/), Validators.max(999999)]],\n      p3: [1000, [Validators.min(0), Validators.pattern(/^\\d+$/), Validators.max(999999)]],\n      introduction: ['', Validators.required],\n      stock: [1, [Validators.min(0), Validators.pattern(/^\\d+$/), Validators.max(999)]],\n    });\n\n  }\n \n  getBrands() {\n    this.bridgeService.getBrands().subscribe(data=>{\n      this.brands=data;\n    })\n    }\n\n  getSorts(){\n    \n  }\n  save() {\n    alert(this.goodForm.get(\"dateTime\").value)\n  }\n  submit(): void {\n    this.add(this.goodForm.get('no').value, this.goodForm.get('bname').value,\n      this.goodForm.get('name').value, this.goodForm.get('unit').value,\n      this.goodForm.get('p1').value, this.goodForm.get('p2').value,\n      this.goodForm.get('p3').value, this.goodForm.get('introduction').value,\n      this.goodForm.get('stock').value,this.goodForm.get('sort').value)\n  }\n  add(no: string, bname: string, name: string, unit: string, p1: number, p2: number, p3: number, introduction: string, stock: number,sort:string) {\n    this.bridgeService.addGood({ no,bname,name,unit,p1,p2,p3,introduction,stock,sort } as Goods).subscribe((data)=>{\n      if(data==true){\n        this.share.openSnackBar('添加成功','')\n        this.goBack()\n      }\n      else{\n        this.share.openSnackBar('添加失败','确定')\n      }\n        \n    })\n  }\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<div class=\"container c1\">\n    <mat-card class=\"card\">\n        <form [formGroup]='goodForm'>\n            <mat-form-field class=\"c2\">\n                <mat-label>商品编号</mat-label>\n                <input type=\"number\" matInput formControlName=\"no\" required >\n                <mat-error>\n                    <span\n                        *ngIf=\"!goodForm.get('no').valid && goodForm.get('no').touched \">请输入编号</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label>分类</mat-label>\n                <mat-select  formControlName=\"sort\" required>\n                    <mat-option *ngFor=\"let b of sorts\" [value]=\"b\">\n                        {{b}}\n                    </mat-option>\n                </mat-select>\n                <mat-error>\n                    <span\n                        *ngIf=\"!goodForm.get('sort').valid && goodForm.get('sort').touched\">请选择类别</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label>品牌名称</mat-label>\n                <mat-select  formControlName=\"bname\" required>\n                    <mat-option *ngFor=\"let b of brands\" [value]=\"b\">\n                        {{b}}\n                    </mat-option>\n                </mat-select>\n                <mat-error>\n                    <span\n                        *ngIf=\"!goodForm.get('bname').valid && goodForm.get('bname').touched\">请选择品牌</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label>商品名称</mat-label>\n                <input matInput formControlName=\"name\" required>\n                <mat-error>\n                    <span\n                        *ngIf=\"!goodForm.get('name').valid && goodForm.get('name').touched\">请输入商品名称</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label>计量单位</mat-label>\n                <mat-select  formControlName=\"unit\" required>\n                    <mat-option *ngFor=\"let b of unit\" [value]=\"b\">\n                        {{b}}\n                    </mat-option>\n                </mat-select>\n                <mat-error>\n                    <span\n                        *ngIf=\"!goodForm.get('unit').valid && goodForm.get('unit').touched\">请输入单位</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label>商品介绍</mat-label>\n                <input type=\"text\" matInput formControlName=\"introduction\" required>\n                <mat-error>\n                    <span\n                        *ngIf=\"!goodForm.get('introduction').valid && goodForm.get('introduction').touched\">请输入商品描述</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label>市场价</mat-label>\n                <input type=\"number\" matInput formControlName=\"p1\" required>\n                <mat-error>\n                    <span\n                        *ngIf=\"!goodForm.get('p1').valid && goodForm.get('p1').touched\">请输入正确的数值</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label>销售价</mat-label>\n                <input  type=\"number\" matInput formControlName=\"p2\" required>\n                <mat-error>\n                    <span\n                        *ngIf=\"!goodForm.get('p2').valid && goodForm.get('p2').touched\">请输入正确的数值</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label>成本价</mat-label>\n                <input type=\"number\" matInput formControlName=\"p3\" required>\n                <mat-error>\n                    <span\n                        *ngIf=\"!goodForm.get('p3').valid && goodForm.get('p3').touched\">请输入正确的数值</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"c2\">\n                <mat-label>库存</mat-label>\n                <input type=\"number\" matInput formControlName=\"stock\" required>\n                <mat-error>\n                    <span\n                        *ngIf=\"!goodForm.get('stock').valid && goodForm.get('stock').touched\">请输入正确的数值</span>\n                </mat-error>\n            </mat-form-field> \n        </form>\n        <mat-card-actions align=\"end\">\n            <button mat-button [disabled]=\"!goodForm.valid\" (click)=\"submit()\"><mat-icon>done</mat-icon>提交</button>\n            <button mat-button (click)=\"goBack()\"> <mat-icon>arrow_back_ios_new</mat-icon>返回</button>\n        </mat-card-actions> \n       \n    </mat-card>\n\n</div>","\nimport { Brand} from '../../class';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { BrandService } from 'src/app/server/brand.service';\n\n\n@Component({\n  selector: 'app-brand-list',\n  templateUrl: './brand-list.component.html',\n  styleUrls: ['./brand-list.component.scss']\n})\nexport class BrandListComponent implements OnInit {\n\n  allBrand:Brand[]=[]\n  dataSource:MatTableDataSource<Brand>\n  displayedColumns: string[]=['品牌名称','品牌网站']\n\n  private searchTerms = new Subject<string>();\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(\n    private service:BrandService\n  ) { }\n  \n  ngOnInit(): void {\n    this.service.getAllBrand().subscribe((data)=>{\n      this.allBrand=data;\n      this.dataSource=new MatTableDataSource<Brand>(this.allBrand);\n      this.dataSource.paginator = this.paginator;\n    })\n    this.searchTerms\n      .pipe(\n        // 在传出最终字符串之前，debounceTime(300) 将会等待，直到新增字符串的事件暂停了 300 毫秒\n        debounceTime(300),\n        // 确保只在过滤词变化时才发送请求\n        distinctUntilChanged(),\n        // 为每个从 debounce 和 distinctUntilChanged 中通过的搜索词调用搜索服务。\n        // 它会取消并丢弃以前的搜索可观察对象，只保留最近的\n        switchMap((term: string) => this.service.getBrands(term)),\n      )\n      .subscribe(( data  => { \n        this.allBrand=data;\n        this.dataSource=new MatTableDataSource<Brand>(this.allBrand);\n        this.dataSource.paginator = this.paginator;\n      }));\n  }\n\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n}\n","<div class=\"ml-3 mr-3 mt-1\">\n    <mat-toolbar color=\"primary\" class=\"bg\">\n      <a class=\"\" mat-button>\n        <mat-icon>home</mat-icon> 品牌管理\n      </a>\n      <a class=\"mr-3\" mat-button>\n        <button mat-button routerLink=\"/brand-add\"><mat-icon>add</mat-icon> 添加品牌 </button>\n      </a>\n      <span class=\"example-spacer\"></span>\n      <a class=\"mr-3\" mat-button>\n        <mat-icon>search</mat-icon> 查找\n        <mat-form-field>\n          <input matInput placeholder=\"查找内容\" #searchBox (input)=\"search(searchBox.value)\">\n         </mat-form-field>\n      </a>\n  \n      <span class=\"spacer\"></span>\n      <div class=\"example-icon row\">\n      </div>\n    </mat-toolbar>\n    <mat-sidenav-container class=\"example-container\" autosize>\n      <mat-sidenav #drawer class=\"example-sidenav\" mode=\"side\">\n        <mat-action-list>\n          <button mat-list-item routerLink=\"/brand-add\"> 添加商品 </button>\n          <button mat-list-item (click)=\"null\"> 日常巡检 </button>\n          <button mat-list-item (click)=\"null\"> 定期检测 </button>\n          <button mat-list-item (click)=\"null\"> 状况评估 </button>\n        </mat-action-list>\n      </mat-sidenav>\n      <mat-sidenav-content class=\"example-sidenav-content\">\n        <div class=\"z-depth-2\">\n          <mat-table [dataSource]=\"dataSource\">\n            <ng-container matColumnDef=\"品牌名称\">\n              <mat-header-cell *matHeaderCellDef class=\"\">品牌名称</mat-header-cell>\n              <mat-cell *matCellDef=\"let row\"> {{row.name}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"品牌网站\">\n              <mat-header-cell *matHeaderCellDef class=\"\"><span> 品牌网站</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let row\"> {{row.url}} </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n            <mat-row class=\"hoverable\" *matRowDef=\"let row; columns: displayedColumns;\"\n              [routerLink]=\"['/brand-detail/', row.name]\">\n            </mat-row>\n          </mat-table>\n        </div>\n        <mat-paginator [length]=10 [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../../class';\nimport { Subject } from 'rxjs';\nimport { HeroService } from '../../hero.service';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-hero-search',\n  templateUrl: './hero-search.component.html',\n  styleUrls: ['./hero-search.component.scss']\n})\nexport class HeroSearchComponent implements OnInit {\n\n  heroes: Hero[] = [];\n  // Subject 既是可观察对象的数据源，本身也是 Observable。\n  // 你可以像订阅任何 Observable 一样订阅 Subject。\n  // 你还可以通过调用它的 next(value) 方法往 Observable 中推送一些值\n\n  private searchTerms = new Subject<string>();\n\n  constructor(private heroService: HeroService) {}\n  // 每当用户在文本框中输入时，这个事件绑定就会使用文本框的值（搜索词）调用 search() 函数。\n  // searchTerms 变成了一个能发出搜索词的稳定的流。\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit() {\n    // 如果每当用户击键后就直接调用 heroService.searchHeroesByName将导致创建海量的 HTTP 请求，浪费服务器资源并消耗大量网络流量。\n    // 往 searchTerms 这个可观察对象的处理管道中加入了一系列 RxJS 操作符, 缩减对 heroService.searchHeroesByName 的调用次数\n    this.searchTerms\n      .pipe(\n        // 在传出最终字符串之前，debounceTime(300) 将会等待，直到新增字符串的事件暂停了 300 毫秒\n        debounceTime(300),\n        // 确保只在过滤词变化时才发送请求\n        distinctUntilChanged(),\n        // 为每个从 debounce 和 distinctUntilChanged 中通过的搜索词调用搜索服务。\n        // 它会取消并丢弃以前的搜索可观察对象，只保留最近的\n        switchMap((term: string) => this.heroService.searchHeroes(term)),\n      )\n      .subscribe(( data  => {this.heroes = data}));\n  }\n\n}\n","<mat-form-field>\n    <!-- (input)是该输入框的键入事件 -->\n    <!-- [matAutocomplete]=\"heroName\"与自动完成面板关联 -->\n    <input matInput type=\"type\" placeholder=\"英雄大名\" #searchBox (input)=\"search(searchBox.value)\"\n        [matAutocomplete]=\"heroName\" />\n    <mat-autocomplete #heroName=\"matAutocomplete\">\n        <mat-option *ngFor=\"let hero of heroes\" [routerLink]=\"[ '/hero-detail/', hero.id ]\">\n            {{hero.name}}\n        </mat-option>\n    </mat-autocomplete>\n</mat-form-field>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BridgeService } from '../../server/bridge.service';\nimport { Location } from '@angular/common';\n@Component({\n  selector: 'app-sort-add',\n  templateUrl: './sort-add.component.html',\n  styleUrls: ['./sort-add.component.scss']\n})\nexport class SortAddComponent implements OnInit {\n  goodForm: FormGroup;\n  constructor(    \n    private _formBuilder: FormBuilder,\n    private bridgeService: BridgeService,\n    private location: Location) { }\n\n  ngOnInit(): void {\n    this.goodForm = this._formBuilder.group({\n      name:['',Validators.required]\n    })\n  }\n  submit(){\n    this.bridgeService.addSort(this.goodForm.get('name').value).subscribe((data)=>{\n      if(data==true){\n        alert(\"添加成功!\")\n        this.goBack()\n      }\n      else{\n        alert(\"添加失败\")\n      }\n    })\n  }\n  goBack(): void {\n    this.location.back();\n  }\n}\n","<div class=\"container c1\">\n    <mat-card class=\"card\">\n        <mat-card-title>\n            <mat-label>\n                添加分类\n            </mat-label>\n        </mat-card-title>\n        <form [formGroup]=\"goodForm\">\n            <mat-form-field class=\"c2\">\n                <mat-label>分类名称</mat-label>\n                <input matInput formControlName=\"name\">\n            </mat-form-field>\n        </form>\n        <mat-card-actions align=\"end\">\n            <button mat-button [disabled]=\"!goodForm.valid\" (click)=\"submit()\"><mat-icon>done</mat-icon>提交</button>\n            <button mat-button (click)=\"goBack()\"> <mat-icon>arrow_back_ios_new</mat-icon>返回</button>\n        </mat-card-actions>\n    </mat-card>\n</div>","\nimport { Component, OnInit,Inject } from '@angular/core';\nimport { Order, OrderDetail, tmpGood } from '../../class';\nimport { BuyService } from 'src/app/server/buy.service';\nimport { BridgeService } from 'src/app/server/bridge.service';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { Observable, Subject,of } from 'rxjs';\nimport { Location } from '@angular/common';\n\nimport {MatDialog} from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { OrderService } from 'src/app/server/order.service';\nimport { SharedService } from 'src/app/server/shared.service';\n\n\n@Component({\n  selector: 'app-car',\n  templateUrl: './car.component.html',\n  styleUrls: ['./car.component.scss']\n})\nexport class CarComponent implements OnInit {\n  mymap=new Map()\n  tmpGoods: tmpGood[]=[];\n  amount:number=0\n  private searchTerms = new Subject<tmpGood>();\n  constructor(\n    private server: BuyService,\n    private location: Location,\n    private server1:BridgeService,\n    public dialog: MatDialog,\n    public sharedService: SharedService\n    ) { }\n\n  ngOnInit() {\n    // this.server1.getAllGoods('')\n    //   .subscribe((data) =>{\n    //     for(let g of data){\n    //       let n=0\n    //       this.server.addGoods({g,n} as tmpGood).subscribe()\n    //     }\n    //   });\n    this.server.getGoods().subscribe(data=>{\n      this.tmpGoods=data;\n      this.count();\n    })\n    this.searchTerms\n    .pipe(\n      // 在传出最终字符串之前，debounceTime(300) 将会等待，直到新增字符串的事件暂停了 300 毫秒\n      debounceTime(300),\n      // 确保只在过滤词变化时才发送请求\n      distinctUntilChanged(),\n      // 为每个从 debounce 和 distinctUntilChanged 中通过的搜索词调用搜索服务。\n      // 它会取消并丢弃以前的搜索可观察对象，只保留最近的\n      switchMap((term: tmpGood)=>this.check(term))\n    ).subscribe(()=>{\n\n    })\n\n\n\n  }\n  check(t: tmpGood): Observable<tmpGood> {\n    if(t.n>t.g.stock || t.n<0)\n      t.n=0;\n    this.count()\n    return of(t);\n  }\n\n  add(t:tmpGood):void{\n    t.n+=1\n    this.count()\n  }\n\n  sub(t:tmpGood):void{\n    t.n-=1\n    this.count()\n  }\n\n  count():void{\n    this.amount=0;\n    for(let t of this.tmpGoods){\n      if(t.g.no){\n        this.amount+=t.n*t.g.p2\n      }    \n    }\n  }\n\n\n  deleteGood(t:tmpGood):void {\n    this.tmpGoods.splice(this.tmpGoods.indexOf(t),1)\n    this.server.delete(t.id).subscribe(()=>{\n      this.count()\n    })\n  }\n\n  deleteAll():void{\n    for(let t of this.tmpGoods){\n      this.server.delete(t.id).subscribe()\n    }\n    this.tmpGoods.splice(0,this.tmpGoods.length)\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  submit():void{\n    this.dialog.open(SubmitDialog,{\n      disableClose: false,\n      hasBackdrop: true , \n      width: '40%',\n      data: { tmp: this.tmpGoods }}).afterClosed().subscribe(()=>{\n      this.server.getGoods().subscribe(data=>{\n        this.tmpGoods=data;\n        this.count();\n      })\n    });\n  }\n}\n@Component({\n  selector: 'submint-dialog',\n  templateUrl: 'submit-dialog.html',\n  })\nexport class SubmitDialog {\n  order:Order=new Order()\n  orderDetail:OrderDetail[]=[]\n  amount:number=0\n  orderFrom:FormGroup\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {tmp: tmpGood[]},\n  private server: BuyService,\n  private goods:BridgeService,\n  private orderServer:OrderService,\n  public dialog: MatDialog,\n  private _formBuilder: FormBuilder,\n  public sharedService: SharedService\n  ) { }\n\n  ngOnInit(): void {\n    \n    for(let t of this.data.tmp){\n      if(t.g.no)\n        this.amount+=t.n*t.g.p2\n    }\n    this.order.no=this.createNo()\n    this.order.cNo=this.sharedService.client.no\n    this.order.postcode=this.sharedService.client.address\n    this.order.amount=this.amount\n    this.order.date=this.order.no.slice(2,16)\n    this.orderFrom= this._formBuilder.group({\n      no:[this.order.no],\n      amout:[this.amount]\n     })\n  }\n\n\n\n  submit():void{\n    this.orderServer.addOrder(this.order).subscribe()\n    for(let t of this.data.tmp){\n      if(t.g.no){\n        this.server.delete(t.id).subscribe()\n        t.g.stock-=t.n\n        let tmp:OrderDetail=new OrderDetail()\n        tmp.no=this.createNo()\n        tmp.oNo=this.order.no\n        tmp.gNo=t.id\n        tmp.n=t.n\n        tmp.amount=t.n*t.g.p2\n        tmp.price=t.g.p2\n        this.orderServer.addOrderDetail(tmp).subscribe()\n      }\n    }\n    this.sharedService.openSnackBar('购买成功!','确定')\n  }\n\n\n  createNo():string{\n    let date = new Date();\n    let n = String.fromCharCode((Math.floor(Math.random() * 26)) + 65);\n    let No: string = 'D'+n + date.getFullYear();\n    if ((date.getMonth()) >= 9)\n        No += date.getMonth() + 1;\n    else\n        No += \"0\" + (date.getMonth() + 1);\n    if (date.getDate() >= 10)\n        No += date.getDate();\n    else\n        No += \"0\" + (date.getDate());\n    if (date.getHours() >= 10)\n        No += date.getHours();\n    else\n        No += \"0\" + (date.getHours())\n    if (date.getMinutes() >= 10)\n        No += date.getMinutes();\n    else\n        No += \"0\" + (date.getMinutes())\n    if (date.getSeconds() >= 10)\n        No += date.getSeconds();\n    else\n        No += \"0\" + date.getSeconds();\n        return No\n}\n}\n@Component({\n  selector: 'ok-dialog',\n  templateUrl: 'ok-dialog.html',\n  })\n  export class Ok1Dialog {}\n","<!-- \n<div class=\"row mt-5 pt-5 animated fadeInRight\">\n    <div class=\"card col-5 mt-2 pt-2 mr-2 hoverable\" *ngFor=\"let t of tmpGoods\">\n      <div class=\"card-header bg lighten-1 white-text text-center\">\n        {{t.g.no}}\n      </div>\n      <div class=\"card-body\">\n        <div class=\"text-center\">\n        </div>\n      </div>\n    </div>\n  </div> -->\n<button class=\"ml-3 mt-2\" mat-flat-button color=\"primary\" (click)=\"goBack()\"><mat-icon>arrow_back</mat-icon>返回</button>\n<mat-card class=\"c2 z-depth-2\">\n    <mat-card-title>购物车</mat-card-title>\n    <mat-card-content class=\"c1\">\n        <mat-list *ngFor=\"let t of tmpGoods \">\n                <mat-accordion *ngIf=\"t.g.no\">\n                    <mat-expansion-panel >\n                        <mat-expansion-panel-header>\n                          <mat-panel-title>\n                            {{t.g.name}}\n                          </mat-panel-title>\n                          <mat-panel-description>\n                            数量: {{t.n}}    金额: {{t.n*t.g.p2}}  \n                          </mat-panel-description>\n                        </mat-expansion-panel-header>\n                        <mat-list>\n                          <mat-list-item>\n                            商品名称： {{t.g.name}}\n                          </mat-list-item>\n                          <mat-divider></mat-divider>\n                          <mat-list-item>\n                            单价： {{t.g.p2}}\n                          </mat-list-item>\n                          <mat-divider></mat-divider>\n                          <mat-list-item>\n                            介绍： {{t.g.introduction}}\n                          </mat-list-item>\n                          <mat-divider></mat-divider>\n                          <mat-list-item>\n                            单位： {{t.g.unit}}\n                          </mat-list-item>\n                          <mat-divider></mat-divider>\n                        </mat-list>\n\n                       <table cellspacing=\"0\" class=\"c3\">\n                            <tr class=\"c3\">\n                                <td >\n                                    <button  mat-flat-button color=\"primary\" (click)=\"sub(t)\" [disabled]=\"t.n<=0\" ><mat-icon>remove</mat-icon></button>\n                                </td>\n                                <td >\n                                    <mat-form-field>\n                                        <mat-label>购买数量: </mat-label>\n                                        <input type=\"number\" matInput [(ngModel)]=\"t.n\" value={{t.n}} (input)=\"check(t)\">\n                                    </mat-form-field>\n                                </td>\n                                <td >\n                                     <button mat-flat-button color=\"primary\" (click)=\"add(t)\" [disabled]='t.n>=t.g.stock'><mat-icon>add</mat-icon></button>\n                                </td>\n                                <td>\n                                  <button mat-flat-button color=\"warn\" (click)=\"deleteGood(t)\"><mat-icon>delete_outline</mat-icon>移除</button>\n                                </td>\n                            </tr>\n                       </table>\n\n                        \n                      </mat-expansion-panel>\n                </mat-accordion>\n\n        </mat-list>\n    </mat-card-content>\n\n    <mat-card-actions align=\"end\">\n      <mat-form-field>\n        <mat-label>总价:  {{amount}}</mat-label>\n        <input type=\"number\" readonly matInput value=\"amount\">\n     </mat-form-field>\n     <button class=\"mr-3 ml-3\" mat-flat-button color=\"warn\"  [disabled]='tmpGoods.length<1' (click)=\"deleteAll()\"><mat-icon>delete_outline</mat-icon>清空</button>\n      <button   mat-flat-button color=\"primary\"  [disabled]='amount<=0' (click)=\"submit()\" ><mat-icon>check_box</mat-icon>提交</button>\n      </mat-card-actions>\n</mat-card>","<div>\r\n    <h1 mat-dialog-title>确认订单信息</h1>\r\n    <mat-dialog-content>\r\n        <mat-card>\r\n            <mat-divider></mat-divider>\r\n            <mat-card-header>\r\n                <mat-card-title>订单信息</mat-card-title>\r\n                <mat-card-subtitle>单号: {{order.no}}</mat-card-subtitle>\r\n            </mat-card-header>\r\n                \r\n            <mat-card-content>\r\n                <table class=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">#</th>\r\n                          <th scope=\"col\">名称</th>\r\n                          <th scope=\"col\">数量</th>\r\n                          <th scope=\"col\">金额</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody *ngFor=\"let t of data.tmp let i=index\">\r\n                        <tr *ngIf=\"t.n\">\r\n                            <th scope=\"row\">{{i}}</th>\r\n                            <td>{{t.g.name}}</td>\r\n                            <td>×{{t.n}}</td>\r\n                            <td>{{t.n*t.g.p2}}</td>\r\n                        </tr>\r\n                        \r\n                      </tbody>\r\n                      <tr>\r\n                        <th scope=\"row\">合计</th>\r\n                        <td colspan=\"2\"></td>\r\n                        <td>{{amount}}</td>\r\n                      </tr>\r\n                </table>\r\n\r\n            </mat-card-content>\r\n            <mat-divider></mat-divider>\r\n        </mat-card>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n        <button mat-button  mat-dialog-close>取消</button>\r\n        <button mat-button class=\"btn-rounded\" [mat-dialog-close]=\"true\" cdkFocusInitial (click)=\"submit()\">提交</button>\r\n    </mat-dialog-actions>\r\n</div>","<h1 mat-dialog-title>提示</h1>\r\n<mat-dialog-content>\r\n    <p>购买成功</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close >确定</button>\r\n</mat-dialog-actions>   ","import { Component, Output, OnInit } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { SharedService } from './server/shared.service';\nimport { RouterOutlet, Router } from '@angular/router';\ninterface Bridge {\n  no: string,\n  name: string\n}\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  @Output() onSend: EventEmitter<string[]> = new EventEmitter<string[]>();\n  title = '菜单';\n  constructor(\n    public sharedService: SharedService, private router: Router\n  ) { }\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet?.activatedRouteData && outlet.activatedRouteData['animation'];\n  }\n  ngOnInit() {\n    \n  }\n\n  login() {\n    this.router.navigate(['/user']);\n  }\n\n  logout() {\n    this.sharedService.logoutConfig()\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"bg\">\n  <a class=\"\" mat-button (click)=\"drawer.toggle()\">\n    <mat-icon>menu</mat-icon> {{title}}\n  </a>\n  <!-- <a class=\"mr-3\" mat-button routerLink=\"/bridge-list\">\n    <mat-icon>list</mat-icon> 桥梁管理\n  </a>\n  <a>\n    <mat-form-field appearance=\"standard\">\n      <mat-label *ngIf=\"!selected\">桥梁类型</mat-label>\n      <mat-select  [(value)]=\"selected\">\n      <mat-option *ngFor=\"let Bridge of BridgeNo\" [value]=\"Bridge.no\">\n        <a mat-list-item routerLink=\"/hero-list/{{Bridge.no}}\"> {{Bridge.name}} </a>\n      </mat-option>\n      </mat-select>\n      </mat-form-field>\n  </a>\n  <a class=\"mr-3\"  mat-button>\n    <mat-icon>search</mat-icon> 查找\n    <app-hero-search></app-hero-search>\n  </a> -->\n\n  <span class=\"spacer\"></span>\n  <div class=\"example-icon row\">\n    <div class=\"col-md-11\">\n\n    </div>\n    <div class=\"col-md-1\">\n      <a mat-button *ngIf=\"!sharedService.isLogined\" (click)=\"login()\">\n        <mat-icon class=\"icon\">exit_to_app</mat-icon>登录\n      </a>\n      <a mat-button *ngIf=\"sharedService.isLogined\" (click)=\"logout()\">\n        <mat-icon class=\"icon\">logout</mat-icon>登出\n      </a>\n    </div>\n  </div>\n</mat-toolbar>\n\n\n<div class=\"c\">\n  <mat-sidenav-container color=\"primary\" class=\"example-container\" autosize>\n    <mat-sidenav #drawer color=\"primary\" class=\"example-sidenav\" mode=\"side\">\n      <mat-action-list >\n        <button *ngIf=\"sharedService.root==='root'\" mat-list-item routerLink=\"/good-list\" class=\"text-white\">  商品管理 </button>\n        <button *ngIf=\"sharedService.root==='root'\" mat-list-item routerLink=\"/brand-list\"  class=\"text-white\"> 品牌管理 </button>\n        <button *ngIf=\"sharedService.root==='root'\" mat-list-item routerLink=\"/client-list\"  class=\"text-white\"> 客户管理 </button>\n        <button *ngIf=\"sharedService.root==='root'\" mat-list-item routerLink=\"/order-list\" class=\"text-white\"> 订单管理 </button>\n        <button *ngIf=\"sharedService.root==='root' || sharedService.root=='user'\" mat-list-item routerLink=\"/buy\"  class=\"text-white\"> 模拟购买 </button>\n        <button *ngIf=\"sharedService.root==='user'\" mat-list-item [routerLink]=\"['/client-detail/',sharedService.client.no]\"  class=\"text-white\"> 用户中心 </button>\n      </mat-action-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"example-sidenav-content\">\n            <router-outlet ></router-outlet>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n","\nimport { Bridge } from '../../class';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { BridgeService } from '../../server/bridge.service';\n\ninterface Bridge1 {\n  no: string,\n  name: string\n}\n@Component({\n  selector: 'app-bridge-list',\n  templateUrl: './bridge-list.component.html',\n  styleUrls: ['./bridge-list.component.scss']\n})\nexport class BridgeListComponent implements OnInit {\n  \n  BridgeNo: Bridge1[] = []\n  selected: string=''\n\n  allBridges:Bridge[]=[]\n  dataSource:MatTableDataSource<Bridge>\n  displayedColumns: string[]=['编号','名称','类型','建成时间','管理单位']\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(\n    private bridgeService:BridgeService\n  ) { }\n  \n  ngOnInit(): void {\n    let tmp = this.bridgeService.getAllBridgeType();\n    for (let i of tmp) {\n      let s = i.split(\":\");\n      let b: Bridge1 = {\n        no: s[0],\n        name: s[1]\n      }\n      this.BridgeNo.push(b)\n    }\n    this.bridgeService.getAllBridge().subscribe((data)=>{\n      this.allBridges=data;\n      this.dataSource=new MatTableDataSource<Bridge>(this.allBridges);\n      this.dataSource.paginator = this.paginator;\n    })\n  }\n\n\n}\n","<div class=\"ml-3 mr-3 mt-1\">\n    <mat-toolbar color=\"primary\" class=\"bg1\">\n        <a class=\"\" mat-button (click)=\"drawer.toggle()\">\n          <mat-icon>menu</mat-icon> 功能\n        </a>\n        <a class=\"mr-3\" mat-button >\n          <mat-icon>list</mat-icon> 桥梁管理\n        </a>\n        <a>\n          <mat-form-field appearance=\"standard\">\n            <mat-label *ngIf=\"!selected\">桥梁类型</mat-label>\n            <mat-select  [(value)]=\"selected\">\n            <mat-option *ngFor=\"let Bridge of BridgeNo\" [value]=\"Bridge.no\">\n              <a mat-list-item routerLink=\"/hero-list/{{Bridge.no}}\"> {{Bridge.name}} </a>\n            </mat-option>\n            </mat-select>\n            </mat-form-field>\n        </a>\n        <a class=\"mr-3\"  mat-button>\n          <mat-icon>search</mat-icon> 查找\n          <app-hero-search></app-hero-search>\n        </a>\n      \n        <span class=\"spacer\"></span>\n        <div class=\"example-icon row\">\n        </div>\n      </mat-toolbar>\n    <mat-sidenav-container class=\"example-container\" autosize>\n        <mat-sidenav #drawer class=\"example-sidenav\" mode=\"side\">\n          <mat-action-list>\n            <button mat-list-item routerLink=\"/bridge-add\"> 添加桥梁 </button>\n            <button mat-list-item (click)=\"null\"> 日常巡检 </button>\n            <button mat-list-item (click)=\"null\"> 定期检测 </button>\n            <button mat-list-item (click)=\"null\"> 状况评估 </button>\n          </mat-action-list>\n        </mat-sidenav>\n        <mat-sidenav-content class=\"example-sidenav-content\">\n            <div class=\"z-depth-2\">\n                <mat-table  [dataSource]=\"dataSource\" >\n                    <ng-container matColumnDef=\"编号\">\n                        <mat-header-cell *matHeaderCellDef class=\"bg\">编 号</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\"> {{row.bridgeNo}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"名称\">\n                        <mat-header-cell *matHeaderCellDef class=\"bg\"><span> 名 称</span>  </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\"> {{row.bridgeName}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"类型\">\n                        <mat-header-cell *matHeaderCellDef  class=\"bg\"> 类 型 </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\"> {{row.bridgeTypeNo}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"建成时间\">\n                        <mat-header-cell *matHeaderCellDef  class=\"bg\"> 建 成 时 间 </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\"> {{row.dateTime}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"管理单位\">\n                        <mat-header-cell *matHeaderCellDef class=\"bg\"> 管 理 单 位 </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\"> {{row.managementUnit}} </mat-cell>\n                    </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row class=\"hoverable\" *matRowDef=\"let row; columns: displayedColumns;\" [routerLink]=\"['/hero-detail/', row.bridgeNo]\">\n                </mat-row>\n                </mat-table>\n            </div>\n            <mat-paginator [length]=10 [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n        </mat-sidenav-content>\n      </mat-sidenav-container>\n    \n</div>\n","\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { BridgeService } from '../../server/bridge.service';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Goods } from 'src/app/class';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { SharedService } from 'src/app/server/shared.service';\n\n\ninterface b {\n  name: string\n}\n\n@Component({\n  selector: 'app-good-detail',\n  templateUrl: './good-detail.component.html',\n  styleUrls: ['./good-detail.component.scss']\n})\nexport class GoodDetailComponent implements OnInit {\n  g:Goods;\n  goodForm: FormGroup;\n  brands: string[] = []\n  unit: string[] = ['克', '千克', '米', '个', '条', '平方米', '毫升', '升']\n  constructor(\n    private route: ActivatedRoute,\n    private bridgeService: BridgeService,\n    private location: Location,\n    private _formBuilder: FormBuilder,\n    private share:SharedService,\n  ) { }\n\n  ngOnInit(): void {\n    const no = this.route.snapshot.paramMap.get('no');\n    this.bridgeService.findGoodByNo(no).subscribe((data)=>{\n      this.g=data;\n    })\n    this.getBrands()\n    this.goodForm = this._formBuilder.group({\n      no: [this.g.no],\n      bname: [this.g.bname, Validators.required],\n      name: [this.g.name, Validators.required],\n      unit: [this.g.unit, Validators.required],\n      p1: [this.g.p1, [Validators.min(0), Validators.pattern(/^\\d+$/), Validators.max(999999)]],\n      p2: [this.g.p2, [Validators.min(0), Validators.pattern(/^\\d+$/), Validators.max(999999)]],\n      p3: [this.g.p3, [Validators.min(0), Validators.pattern(/^\\d+$/), Validators.max(999999)]],\n      introduction: [this.g.introduction, Validators.required],\n      stock: [this.g.stock, [Validators.min(0), Validators.pattern(/^\\d+$/), Validators.max(999)]],\n    });\n  }\n\n  getBrands() {\n    this.bridgeService.getBrands().subscribe((data)=>{\n      this.brands=data\n    })\n  }\n  save() {\n    alert(this.goodForm.get(\"dateTime\").value)\n  }\n  submit(): void {\n    this.add(this.goodForm.get('no').value, this.goodForm.get('bname').value,\n      this.goodForm.get('name').value, this.goodForm.get('unit').value,\n      this.goodForm.get('p1').value, this.goodForm.get('p2').value,\n      this.goodForm.get('p3').value, this.goodForm.get('introduction').value,\n      this.goodForm.get('stock').value)\n  }\n  add(no: string, bname: string, name: string, unit: string, p1: number, p2: number, p3: number, introduction: string, stock: number) {\n    this.bridgeService.updateGoods({ no,bname,name,unit,p1,p2,p3,introduction,stock } as Goods).subscribe((data)=>{\n      if(data==true){\n        this.share.openSnackBar('修改成功','')\n        this.goBack()\n      }\n      else{\n        this.share.openSnackBar('修改失败','确定')\n      }\n        \n    })\n  }\n\n  delete(no:string){\n    if(confirm(\"确定删除该商品?\")){\n      this.bridgeService.deleteGoods(no).subscribe((data)=>{\n        if(data==true){\n          this.share.openSnackBar('删除成功','')\n          this.goBack()\n        }\n        else{\n          this.share.openSnackBar('删除失败','')\n        }\n      })\n    }\n\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<mat-card class=\"my-card z-depth-1 mb-2\">\n    <mat-card-header>\n        <div mat-card-avatar class=\"example-header-image\"></div>\n        <mat-card-title class=\"my-card-title\">商品信息</mat-card-title>\n        <mat-card-subtitle>{{g.name}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content class=\"c1\">\n        <mat-accordion>\n            <mat-list>\n                <form [formGroup]='goodForm'>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>商品编号</mat-label>\n                        <input matInput formControlName=\"no\" readonly >\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>品牌名称</mat-label>\n                        <mat-select  formControlName=\"bname\" required>\n                            <mat-option *ngFor=\"let b of brands\" [value]=\"b.name\">\n                                {{b.name}}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>\n                            <span\n                                *ngIf=\"!goodForm.get('bname').valid && goodForm.get('bname').touched\">请选择品牌</span>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>商品名称</mat-label>\n                        <input matInput formControlName=\"name\" required>\n                        <mat-error>\n                            <span\n                                *ngIf=\"!goodForm.get('name').valid && goodForm.get('name').touched\">请输入商品名称</span>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>计量单位</mat-label>\n                        <mat-select  formControlName=\"unit\" required>\n                            <mat-option *ngFor=\"let b of unit\" [value]=\"b\">\n                                {{b}}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>\n                            <span\n                                *ngIf=\"!goodForm.get('unit').valid && goodForm.get('unit').touched\">请输入单位</span>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>商品介绍</mat-label>\n                        <input matInput formControlName=\"introduction\" required>\n                        <mat-error>\n                            <span\n                                *ngIf=\"!goodForm.get('introduction').valid && goodForm.get('introduction').touched\">请输入商品描述</span>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>市场价</mat-label>\n                        <input type=\"number\" matInput formControlName=\"p1\" required>\n                        <mat-error>\n                            <span\n                                *ngIf=\"!goodForm.get('p1').valid && goodForm.get('p1').touched\">请输入正确的数值</span>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>销售价</mat-label>\n                        <input type=\"number\" matInput formControlName=\"p2\" required>\n                        <mat-error>\n                            <span\n                                *ngIf=\"!goodForm.get('p2').valid && goodForm.get('p2').touched\">请输入正确的数值</span>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>成本价</mat-label>\n                        <input type=\"number\" matInput formControlName=\"p3\" required>\n                        <mat-error>\n                            <span\n                                *ngIf=\"!goodForm.get('p3').valid && goodForm.get('p3').touched\">请输入正确的数值</span>\n                        </mat-error>\n                    </mat-form-field>\n        \n                    <mat-form-field class=\"c2\">\n                        <mat-label >库存</mat-label>\n                        <input type=\"number\" matInput formControlName=\"stock\" required>\n                        <mat-error>\n                            <span\n                                *ngIf=\"!goodForm.get('stock').valid && goodForm.get('stock').touched\">请输入正确的数值</span>\n                        </mat-error>\n                    </mat-form-field> \n                </form> \n            </mat-list>\n\n        </mat-accordion>\n\n    </mat-card-content>\n    <mat-card-actions align=\"start\">\n        <button mat-button (click)=\"delete(g.no)\">\n            <mat-icon>delete</mat-icon> 删除\n        </button>\n        <button mat-button (click)=\"submit()\">\n            <mat-icon> edit</mat-icon>保存\n        </button>\n        <button mat-button (click)=\"goBack()\">\n            <mat-icon>undo</mat-icon> 返回\n        </button>\n    </mat-card-actions>\n</mat-card>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { SharedService } from '../../server/shared.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginGuard implements CanActivate {\r\n\r\n  constructor(private sharedService: SharedService, private router: Router) { }\r\n  // 重写canActivate方法，返回true才能按路由配置中的路由进行导航\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\r\n    if (this.sharedService.isLogined) {\r\n      return true;\r\n    }\r\n    //  保存用户要去的url, 其经过验证后将会自动导向该页面\r\n    this.sharedService.redirectUrl = state.url;\r\n    this.router.navigate(['/user']);\r\n    this.sharedService.openSnackBar('请登录','确定');\r\n    return false;\r\n  }\r\n}\r\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\nimport { Goods, tmpGood } from '../class';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BuyService {\n  private url='api/tmpGoods';\n  httpOptions = {\n    header: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n  // 注入了HttpClient服务\n  constructor(private http: HttpClient) { }\n\n  getGoods(): Observable<tmpGood[]> {\n    return this.http.get<tmpGood[]>(this.url);\n  }\n\n  addGoods(tmp: tmpGood): Observable<tmpGood> {\n    return this.http.post<tmpGood>(this.url, tmp);\n  }\n\n  // 删除一个英雄\n  delete(id:string): Observable<any> {\n    return this.http.delete(`${this.url}/${id}`);\n  }\n  // 更新一个英雄\n  // updateHero(hero: Hero): Observable<Hero> {\n  //   return this.http.put<Hero>(this.heroesUrl, hero);\n  // }\n  // //查找一个英雄\n  // searchHeroes(term: string): Observable<Hero[]> {\n  //   if (!term.trim()) {\n  //     // if not search term, return empty hero array.\n  //     return of([]);\n  //   }\n  //   return this.http.get<Hero[]>(`${this.heroesUrl}/?name=${term}`)\n  // }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.scss']\n})\nexport class ReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bg\">\n    <div class=\"text-center\">\n        <h1><strong>英雄之路作业报告</strong></h1>\n    </div>\n    <div>\n        <h3>一、作业内容</h3>\n        <h4>\n            <pre>\n\n        1、利用angular框架搭建英雄之路项目。\n        2、采用angular material组件库来对整个项目进行布局和设计。\n        3、结合MDbootstrap和fortawesome两种CSS框架对项目进行美化。\n    </pre>\n        </h4>\n    </div>\n    <div>\n        <h3>二、开发过程</h3>\n        <h4>\n            <pre>\n        1.开发工具\n            VS Code、angular、Nodejs。\n\n        2.开发环境\n            @angular-devkit/architect       0.1102.12\n            @angular-devkit/build-angular   0.1102.12\n            @angular-devkit/core            11.2.12\n            @angular-devkit/schematics      11.2.12\n            @angular/cdk                    11.2.12\n            @angular/cli                    11.2.12\n            @angular/material               11.2.12\n            @schematics/angular             11.2.12\n            @schematics/update              0.1102.12\n            rxjs                            7.0.0\n            typescript                      4.1.5\n\n        3、开发过程\n\n            （1）先跟着官网<a href=\"https://angular.cn/tutorial\"><ins>https://angular.cn/tutorial</ins></a>试着模仿,然后熟悉angular基本框架结构,\n            再了解angular相关工具和库的使用方法。\n\n            （2）在官网样例和老师给的样例的基础上按照自己的想法进行修改和结合。\n\n            （3）期间遇到问题通过问同学、老师以及查百度、CSDN等来尝试解决。\n\n    </pre>\n        </h4>\n    </div>\n    <div>\n        <h3>三、遇到的问题</h3>\n        <h4>\n            <pre>\n\n        1、已解决问题：\n            (1）MDB样式无法正常使用。\n                解决方法：<a href=\"https://mdbootstrap.com/docs/b5/angular/getting-started/installation/\">\n                <ins>https://mdbootstrap.com/docs/b5/angular/getting-started/installation/</ins></a>\n           \n            (2) Material Icon无法正常显示图标。\n                解决方法：在项目的index.html文件中的head标签中加入\n                <ins>&lt;link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"&gt;</ins>\n            \n            (3) 再使用Material组件库出现\n               <img src=\"assets/1.png\">\n                错误提示,一般都是app.module.ts中缺少对对应模块的import,此类错误只需要在<a href=\"https://material.angular.cn/components/paginator/overview\">\n                <ins>https://material.angular.cn/components/paginator/overview</ins></a>\n                中找到对应模块,把API中import语句复制到app.module.ts中,并在import中导入即可。\n                类似错误都可尝试此方法解决。\n\n            (4) 在hero-list组件中进行删除操作后mat-table中没有同步操作\n                解决方法: 在删除函数中再执行一次对dataSource和paginator的重新赋值。\n            \n        2、未解决问题\n            （1）在使用mat-table中，如果在每一行中放入按钮同时对mat-row标签添加routerLink事件后，\n            当点击按钮后同时触发按钮对应事件和routerLink绑定事件。\n                现在采取暂时放弃routerLink事件，额外添加一个按钮事件来代替routerLink对应事件。\n    \n        </pre>\n        </h4>\n    </div>\n    <div>\n        <h3>四、总结</h3>\n        <h4>\n            <pre>\n            通过此次angular项目实践，不仅使我对angular框架有了更深一步的了解，同时还增强了自我学习能力。\n        相比较于传统的通过html+css+js的模式，通过使用框架可以大大节省我们项目开发的时间以及开发难度。\n        当然，前提是我们必须能够熟练的掌握并且使用对应框架的各种工具。虽然前期学习angular的时候很痛苦\n        ，但是当我能够开始驾驭它的时候，才能真正体验它的便捷和强大。</pre>\n        </h4>\n    </div>\n</div>","\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Client } from 'src/app/class';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ClientService } from 'src/app/server/client.service';\nimport { SharedService } from 'src/app/server/shared.service';\n\n\n@Component({\n  selector: 'app-client-detail',\n  templateUrl: './client-detail.component.html',\n  styleUrls: ['./client-detail.component.scss']\n})\nexport class ClientDetailComponent implements OnInit {\n  c:Client;\n  clientForm: FormGroup;\n  hide:boolean=true\n  constructor(\n    private route: ActivatedRoute,\n    private service: ClientService,\n    private location: Location,\n    private _formBuilder: FormBuilder,\n    public share: SharedService\n  ) { }\n\n  ngOnInit(): void {\n    const no = this.route.snapshot.paramMap.get('no');\n    this.service.findClientByNo(no).subscribe((data)=>{\n      this.c=data;\n    })\n    this.clientForm = this._formBuilder.group({\n      no:[this.c.no],\n      name: [this.c.name, [Validators.required,Validators.minLength(1),Validators.maxLength(10)]],\n      address: [this.c.address,[Validators.required,Validators.minLength(1),Validators.maxLength(20)]],\n      tNumber:[this.c.tNumber, [Validators.required,Validators.minLength(11),Validators.maxLength(11)]],\n      password:[this.c.password,[Validators.required,Validators.minLength(6),Validators.maxLength(16)]]\n    });\n  }\n\n  save() {\n    alert(this.clientForm.get(\"dateTime\").value)\n  }\n  submit(): void {\n    this.add(this.clientForm.get('no').value, this.clientForm.get('name').value,this.clientForm.get('address').value,this.clientForm.get('tNumber').value)\n  }\n  add(no:string, name: string, address: string,tNumber:string) {\n    this.service.updateClient({no, name,address,tNumber } as Client).subscribe((data)=>{\n      if(data==true){\n        this.share.openSnackBar('修改成功','')\n        this.goBack()\n      }\n      else{\n        this.share.openSnackBar('修改失败','确定')\n      }\n        \n    })\n  }\n\n  delete(no:string){\n    if(confirm(\"确定删除该商品?\")){\n      this.service.deleteClient(no).subscribe((data)=>{\n        if(data==true){\n          this.share.openSnackBar('删除成功','')\n          this.goBack()\n        }\n        else{\n          this.share.openSnackBar('删除失败','确定')\n        }\n      })\n    }\n\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n}\n","<mat-card class=\"my-card z-depth-1 mb-2\">\n    <mat-card-header>\n        <div mat-card-avatar class=\"example-header-image\"></div>\n        <mat-card-title class=\"my-card-title\">客户信息</mat-card-title>\n        <mat-card-subtitle>{{c.name}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content class=\"c1\">\n        <mat-accordion>\n            <mat-list>\n                <form [formGroup]='clientForm'>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>客户号</mat-label>\n                        <input  matInput formControlName=\"no\" readonly>\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>客户姓名</mat-label>\n                        <input matInput formControlName=\"name\" >\n                        <mat-error>\n                            <span\n                            *ngIf=\"!clientForm.get('name').valid && clientForm.get('name').touched\"></span>\n                        </mat-error>\n        \n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>地址</mat-label>\n                        <input   matInput formControlName=\"address\" >\n                        <mat-error>\n                            <span\n                                *ngIf=\"!clientForm.get('address').valid && clientForm.get('address').touched\"></span>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>联系方式</mat-label>\n                        <input type=\"tel\"  matInput formControlName=\"tNumber\" >\n                        <mat-error>\n                            <span\n                                *ngIf=\"!clientForm.get('tNumber').valid && clientForm.get('tNumber').touched\"></span>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"share.root=='user'\" class=\"c2\">\n                        <mat-label>密码</mat-label>\n                    <input matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"密码\" formControlName=\"password\"\n                        required>\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                        [attr.aria-pressed]=\"hide\">\n                        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n                        <mat-error>\n                            <span\n                                *ngIf=\"!clientForm.get('password').valid && clientForm.get('password').touched\">密码必须大于六位且小于十六位</span>\n                        </mat-error>\n                    </mat-form-field>\n                </form> \n            </mat-list>\n\n        </mat-accordion>\n\n    </mat-card-content>\n    <mat-card-actions align=\"start\">\n        <button mat-button (click)=\"delete(c.no)\">\n            <mat-icon>delete</mat-icon> 删除\n        </button>\n        <button mat-button (click)=\"submit()\">\n            <mat-icon> edit</mat-icon>保存\n        </button>\n        <button mat-button (click)=\"goBack()\">\n            <mat-icon>undo</mat-icon> 返回\n        </button>\n    </mat-card-actions>\n</mat-card>","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { HttpClientModule, HttpClientJsonpModule } from '@angular/common/http';\nimport { HeroListComponent } from './components/hero-list/hero-list.component';\nimport { HeroTopComponent } from './components/hero-top/hero-top.component';\nimport { BridgeDetailComponent } from './components/bridge-detail/bridge-detail.component';\nimport { HeroAddComponent } from './components/hero-add/hero-add.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MatPaginatorIntl } from '@angular/material/paginator';\nimport { myPaginator } from './my-paginator'\nimport { HeroSearchComponent } from './components/hero-search/hero-search.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ReportComponent } from './components/report/report.component';\nimport { HeroService } from './hero.service';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { BridgeListComponent } from './components/bridge-list/bridge-list.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { BridgeAddComponent } from './components/bridge-add/bridge-add.component';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { GoodListComponent } from './components/good-list/good-list.component';\nimport { GoodAddComponent } from './components/good-add/good-add.component';\nimport { GoodDetailComponent } from './components/good-detail/good-detail.component';\nimport { BrandListComponent } from './components/brand-list/brand-list.component';\nimport { BrandDetailComponent } from './components/brand-detail/brand-detail.component';\nimport { BrandAddComponent } from './components/brand-add/brand-add.component';\nimport { ClientListComponent } from './components/client-list/client-list.component';\nimport { ClientAddComponent } from './components/client-add/client-add.component';\nimport { ClientDetailComponent } from './components/client-detail/client-detail.component';\nimport { OrderListComponent } from './components/order-list/order-list.component';\nimport { OrderAddComponent } from './components/order-add/order-add.component';\nimport { OrderDetailComponent } from './components/order-detail/order-detail.component';\nimport { BuyComponent,AddDialog, OkDialog} from './components/buy/buy.component';\nimport { CarComponent, Ok1Dialog, SubmitDialog } from './components/car/car.component';\nimport {MatRippleModule} from '@angular/material/core';\nimport { SortAddComponent } from './components/sort-add/sort-add.component';\nimport { UserComponent } from './components/user/user.component';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeroListComponent,\n    HeroTopComponent,\n    BridgeDetailComponent,\n    HeroAddComponent,\n    HeroSearchComponent,\n    ReportComponent,\n    BridgeListComponent,\n    BridgeAddComponent,\n    GoodListComponent,\n    GoodAddComponent,\n    GoodDetailComponent,\n    BrandListComponent,\n    BrandDetailComponent,\n    BrandAddComponent,\n    ClientListComponent,\n    ClientAddComponent,\n    ClientDetailComponent,\n    OrderListComponent,\n    OrderAddComponent,\n    OrderDetailComponent,\n    BuyComponent,\n    CarComponent,\n    AddDialog,\n    OkDialog,\n    SubmitDialog,\n    Ok1Dialog,\n    SortAddComponent,\n    UserComponent\n  ],\n  imports: [\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatRippleModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatStepperModule,\n    MatExpansionModule,\n    MatDividerModule,\n    MatSortModule,\n    MatListModule,\n    MatSidenavModule,\n    HttpClientJsonpModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatRadioModule,\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n    MatAutocompleteModule,\n    MDBBootstrapModule.forRoot(),\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false }\n    )\n  ],\n  providers: [\n    HeroAddComponent,\n    AppComponent,\n    HeroListComponent,\n    HeroSearchComponent,\n    BridgeDetailComponent,\n    HeroService,\n    { provide: MatPaginatorIntl, useValue: myPaginator() }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\nimport { Goods, Hero } from './class';\nimport * as $ from 'jquery'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n  // 请留意修改为你自己的URL\n\n\n  private heroesUrl = 'api/heroes';\n  private url='api/tmpGoods';\n  public static number: number = 17;\n  httpOptions = {\n    header: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n  // 注入了HttpClient服务\n  constructor(private http: HttpClient) { }\n  // 获取所有英雄\n  getHeroes(): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl);\n  }\n  // 获取指定id的英雄\n  getHeroById(id: string): Observable<Hero> {\n    return this.http.get<Hero>(`${this.heroesUrl}/${id}`);\n  }\n  // 获取所有的顶级英雄\n  getTopHeroes(): Observable<Hero[]> {\n    // 请参考Deployd的API文档\n    return this.http.get<Hero[]>(`${this.heroesUrl}?top=true`);\n  }\n  // 添加一个英雄\n  addHero(hero: Hero): Observable<Hero> {\n    hero.id = HeroService.number;\n    HeroService.number += 1;\n    return this.http.post<Hero>(this.heroesUrl, hero);\n  }\n  // 删除一个英雄\n  deleteHero(id: number): Observable<any> {\n    return this.http.delete(`${this.heroesUrl}/${id}`);\n  }\n  // 更新一个英雄\n  updateHero(hero: Hero): Observable<Hero> {\n    return this.http.put<Hero>(this.heroesUrl, hero);\n  }\n  //查找一个英雄\n  searchHeroes(term: string): Observable<Hero[]> {\n    if (!term.trim()) {\n      // if not search term, return empty hero array.\n      return of([]);\n    }\n    return this.http.get<Hero[]>(`${this.heroesUrl}/?name=${term}`)\n  }\n\n  getGoods(): Observable<Goods[]> {\n    return this.http.get<Goods[]>(this.url);\n  }\n\n}\n","import { Order} from '../../class';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { OrderService } from 'src/app/server/order.service';\n\n\n@Component({\n  selector: 'app-order-list',\n  templateUrl: './order-list.component.html',\n  styleUrls: ['./order-list.component.scss']\n})\nexport class OrderListComponent implements OnInit {\n\n  allOrder:Order[]=[]\n  dataSource:MatTableDataSource<Order>\n  displayedColumns: string[]=['订单编号','客户号','邮编','订购时间','金额']\n\n  private searchTerms = new Subject<string>();\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(\n    private service:OrderService\n  ) { }\n  \n  ngOnInit(): void {\n    this.service.getOrders(\"\").subscribe((data)=>{\n      this.allOrder=data;\n      this.dataSource=new MatTableDataSource<Order>(this.allOrder);\n      this.dataSource.paginator = this.paginator;\n    })\n    this.searchTerms\n      .pipe(\n        // 在传出最终字符串之前，debounceTime(300) 将会等待，直到新增字符串的事件暂停了 300 毫秒\n        debounceTime(300),\n        // 确保只在过滤词变化时才发送请求\n        distinctUntilChanged(),\n        // 为每个从 debounce 和 distinctUntilChanged 中通过的搜索词调用搜索服务。\n        // 它会取消并丢弃以前的搜索可观察对象，只保留最近的\n        switchMap((term: string) => this.service.getOrders(term)),\n      )\n      .subscribe(( data  => { \n        this.allOrder=data;\n        this.dataSource=new MatTableDataSource<Order>(this.allOrder);\n        this.dataSource.paginator = this.paginator;\n      }));\n  }\n\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n}\n","<div class=\"ml-3 mr-3 mt-1\">\n    <mat-toolbar color=\"primary\" class=\"bg\">\n      <a class=\"\" mat-button>\n        <mat-icon>home</mat-icon> 订单管理\n      </a>\n\n      <span class=\"example-spacer\"></span>\n      <a class=\"mr-3\" mat-button>\n        <mat-icon>search</mat-icon> 查找\n        <mat-form-field>\n          <input matInput placeholder=\"查找内容\" #searchBox (input)=\"search(searchBox.value)\">\n         </mat-form-field>\n      </a>\n  \n      <span class=\"spacer\"></span>\n      <div class=\"example-icon row\">\n      </div>\n    </mat-toolbar>\n    <mat-sidenav-container class=\"example-container\" autosize>\n      <mat-sidenav #drawer class=\"example-sidenav\" mode=\"side\">\n        <mat-action-list>\n          <button mat-list-item routerLink=\"/brand-add\"> 添加商品 </button>\n          <button mat-list-item (click)=\"null\"> 日常巡检 </button>\n          <button mat-list-item (click)=\"null\"> 定期检测 </button>\n          <button mat-list-item (click)=\"null\"> 状况评估 </button>\n        </mat-action-list>\n      </mat-sidenav>\n      <mat-sidenav-content class=\"example-sidenav-content\">\n        <div class=\"z-depth-2\">\n          <mat-table [dataSource]=\"dataSource\">\n            <ng-container matColumnDef=\"订单编号\">\n              <mat-header-cell *matHeaderCellDef class=\"\">订单编号</mat-header-cell>\n              <mat-cell *matCellDef=\"let row\"> {{row.no}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"客户号\">\n              <mat-header-cell *matHeaderCellDef class=\"\"><span> 客户号</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let row\"> {{row.cNo}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"邮编\">\n                <mat-header-cell *matHeaderCellDef class=\"\"><span> 地址</span> </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\"> {{row.postcode}} </mat-cell>\n              </ng-container>\n              <ng-container matColumnDef=\"订购时间\">\n                <mat-header-cell *matHeaderCellDef class=\"\"><span> 订购时间</span> </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\"> {{row.date}} </mat-cell>\n              </ng-container>\n              <ng-container matColumnDef=\"金额\">\n                <mat-header-cell *matHeaderCellDef class=\"\"><span> 金额</span> </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\"> {{row.amount}} </mat-cell>\n              </ng-container>\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n            <mat-row class=\"hoverable\" *matRowDef=\"let row; columns: displayedColumns;\"\n              [routerLink]=\"['/order-detail/', row.no]\">\n            </mat-row>\n          </mat-table>\n        </div>\n        <mat-paginator [length]=10 [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroupDirective, FormGroup, NgForm, Validator, Validators } from '@angular/forms';\nimport { getLocaleTimeFormat, Location } from '@angular/common';\nimport { ClientService } from 'src/app/server/client.service';\nimport { Client } from 'src/app/class';\nimport { SharedService } from 'src/app/server/shared.service';\n\n\n\n@Component({\n    selector: 'app-client-add',\n    templateUrl: './client-add.component.html',\n    styleUrls: ['./client-add.component.scss']\n})\nexport class ClientAddComponent implements OnInit {\n\n    clientForm: FormGroup;\n    hide:boolean=true\n    root:'root' | 'user' = 'user';\n    constructor(\n        private _formBuilder: FormBuilder,\n        private service: ClientService,\n        private location: Location,\n        private share:SharedService,\n        \n    ) { }\n    ngOnInit() {\n        let date = new Date();\n        let n=String.fromCharCode((Math.floor(Math.random()*26))+65);\n        let No: string = n+ date.getFullYear();\n        if ((date.getMonth()) >= 9)\n            No += date.getMonth() + 1;\n        else\n            No += \"0\" + (date.getMonth() + 1);\n        if (date.getDate() >= 10)\n            No += date.getDate();\n        else\n            No += \"0\" + (date.getDate());\n        if (date.getHours() >= 10)\n            No += date.getHours();\n        else\n            No += \"0\" + (date.getHours())\n        if (date.getMinutes() >= 10)\n            No += date.getMinutes();\n        else\n            No += \"0\" + (date.getMinutes())\n        if (date.getSeconds() >= 10)\n            No += date.getSeconds();\n        else\n            No += \"0\" + date.getSeconds();\n        this.clientForm = this._formBuilder.group({\n            no: [No, Validators.required],\n            name: ['', [Validators.required,Validators.minLength(1),Validators.maxLength(10)]],\n            address: ['',[Validators.required,Validators.minLength(1),Validators.maxLength(20)]],\n            tNumber:['', [Validators.required,Validators.minLength(11),Validators.maxLength(11)]],\n            password:['',[Validators.required,Validators.minLength(6),Validators.maxLength(16)]],\n        });\n\n    }\n\n    submit(): void {\n        this.add(this.clientForm.get('no').value, this.clientForm.get('name').value,\n         this.clientForm.get('address').value, this.clientForm.get('tNumber').value,\n         this.clientForm.get('password').value,this.root)\n    }\n    add(no: string, name: string, address: string, tNumber: string,password:string,root:string) {\n        this.service.addClient({ no, name, address, tNumber,password,root } as Client).subscribe((data) => {\n            if (data == 2) {\n                this.share.openSnackBar('添加成功','')\n                this.goBack()\n            }\n            else if(data==1) {\n                this.share.openSnackBar('该用户已存在!','确定')\n            }\n            else{\n                this.share.openSnackBar('添加失败','确定')\n            }\n        })\n    }\n\n\n\n    goBack(): void {\n        this.location.back();\n    }\n\n\n}\n","<div class=\"container c1\">\n    <!-- <mat-form-field appearance=\"fill\">\n        <mat-label>Input</mat-label>\n        <input matInput>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Select</mat-label>\n        <mat-select>\n            <mat-option value=\"one\">First option</mat-option>\n            <mat-option value=\"two\">Second option</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Textarea</mat-label>\n        <textarea matInput></textarea>\n    </mat-form-field> -->\n\n    <mat-card class=\"card\">\n        <mat-card-header>\n            <mat-card-title>\n                <mat-label>注册</mat-label>\n            </mat-card-title>\n        </mat-card-header>\n        <form [formGroup]='clientForm'>\n            <mat-form-field class=\"c2\">\n                <mat-label>客户号</mat-label>\n                <input  matInput formControlName=\"no\" readonly>\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label><mat-icon>person</mat-icon>客户姓名</mat-label>\n                <input matInput formControlName=\"name\" >\n                <mat-error>\n                    <span\n                    *ngIf=\"!clientForm.get('name').valid && clientForm.get('name').touched\">请输入姓名</span>\n                </mat-error>\n\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label><mat-icon>house</mat-icon>地址</mat-label>\n                <input   matInput formControlName=\"address\" >\n                <mat-error>\n                    <span\n                        *ngIf=\"!clientForm.get('address').valid && clientForm.get('address').touched\">请输入网站</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label><mat-icon>phone</mat-icon>联系方式</mat-label>\n                <input type=\"tel\"  matInput formControlName=\"tNumber\" >\n                <mat-error>\n                    <span\n                        *ngIf=\"!clientForm.get('tNumber').valid && clientForm.get('tNumber').touched\">请输入手机号</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label><mat-icon>vpn_key</mat-icon>密码</mat-label>\n            <input matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"密码\" formControlName=\"password\"\n                required>\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                [attr.aria-pressed]=\"hide\">\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n                <mat-error>\n                    <span\n                        *ngIf=\"!clientForm.get('password').valid && clientForm.get('password').touched\">密码必须大于六位且小于十六位</span>\n                </mat-error>\n            </mat-form-field>\n        </form>\n        <section class=\"c2\">\n            <mat-label><mat-icon>people</mat-icon>权限</mat-label>\n            <mat-radio-group [(ngModel)]=\"root\">\n                <mat-radio-button class=\"mr-5 ml-5\" value=\"root\">管理员</mat-radio-button>\n                <mat-radio-button class=\"mr-5 ml-5\" value=\"user\">普通用户</mat-radio-button>\n            </mat-radio-group>\n        </section> \n        <mat-card-actions align=\"end\">\n            <button mat-flat-button color=\"primary\" [disabled]=\"!clientForm.valid\" (click)=\"submit()\"><mat-icon>done</mat-icon>提交</button>\n            <button mat-flat-button (click)=\"goBack()\"> <mat-icon>arrow_back_ios_new</mat-icon>返回</button>\n        </mat-card-actions>\n       \n    </mat-card>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { Brand } from 'src/app/class';\nimport { BrandService } from 'src/app/server/brand.service';\nimport { SharedService } from 'src/app/server/shared.service';\n\n\n\n@Component({\n  selector: 'app-brand-add',\n  templateUrl: './brand-add.component.html',\n  styleUrls: ['./brand-add.component.scss']\n})\nexport class BrandAddComponent implements OnInit {\n\n  brandForm: FormGroup;\n\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private service: BrandService,\n    private location: Location,\n    private share:SharedService,\n  ) { }\n  ngOnInit() {\n    this.brandForm = this._formBuilder.group({\n      url: ['', Validators.required],\n      name: ['',Validators.required ],\n    });\n\n  }\n\n  submit(): void {\n    this.add(this.brandForm.get('name').value, this.brandForm.get('url').value)\n  }\n  add(name: string, url: string) {\n    this.service.addBrand({ name, url } as Brand).subscribe((data) => {\n      if (data == true) {\n        this.share.openSnackBar('添加成功','确定')\n        this.goBack()\n      }\n      else {\n        this.share.openSnackBar('添加失败','确定')\n      }\n\n    })\n  }\n\n  \n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<div class=\"container\">\n    <!-- <mat-form-field appearance=\"fill\">\n        <mat-label>Input</mat-label>\n        <input matInput>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Select</mat-label>\n        <mat-select>\n            <mat-option value=\"one\">First option</mat-option>\n            <mat-option value=\"two\">Second option</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Textarea</mat-label>\n        <textarea matInput></textarea>\n    </mat-form-field> -->\n    <mat-card class=\"card\">\n        <form [formGroup]='brandForm'>\n            <mat-form-field class=\"c2\">\n                <mat-label>品牌名称</mat-label>\n                <input matInput formControlName=\"name\" >\n                <mat-error>\n                    <span\n                    *ngIf=\"!brandForm.get('name').valid && brandForm.get('name').touched\">请输入品牌名称</span>\n                </mat-error>\n\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label>品牌网站</mat-label>\n                <input type=\"url\"  matInput formControlName=\"url\" >\n                <mat-error>\n                    <span\n                        *ngIf=\"!brandForm.get('url').valid && brandForm.get('url').touched\">请输入网站</span>\n                </mat-error>\n            </mat-form-field>\n        </form> \n        <button mat-button [disabled]=\"!brandForm.valid\" (click)=\"submit()\"><mat-icon>done</mat-icon>提交</button>\n        <button mat-button (click)=\"goBack()\"> <mat-icon>arrow_back_ios_new</mat-icon>返回</button>\n    </mat-card>\n\n</div>","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Client } from '../class';\nimport * as $ from 'jquery'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  constructor() { }\n  getAllClient():Observable<Client[]>{\n    let url=\"http://localhost:8080/Merchandising/ClientServlet\"\n    let operation:string='getAllClient'\n    var data={\n      \"operation\":operation,\n    }\n    var col:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          col=of(data.results)\n        }\n        else {\n          col=null\n        }\n      }\n    })\n     return col\n  }\n\n  getClients(key:string):Observable<Client[]>{//获取所有桥梁类型以及编号\n    let url=\"http://localhost:8080/Merchandising/ClientServlet\"\n    let operation:string='getClients'\n    var data={\n      \"operation\":operation,\n      \"key\":key\n    }\n    let col:any;\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          col=of(data.results)\n\n        }\n        else {\n          col=null\n        }\n      }\n    })\n     return col\n    \n  }\n\n  findClientByNo(no:string):Observable<Client>{\n    let url=\"http://localhost:8080/Merchandising/ClientServlet\"\n    let operation:string='findClientByNo'\n    var data={\n      \"operation\":operation,\n      \"no\":no\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data) {\n          res=of(data.results)\n        }\n        else {\n          res=null\n        }\n      }\n    })\n     return res\n  }\n\n  addClient(c:Client):Observable<number>{\n    let url=\"http://localhost:8080/Merchandising/ClientServlet\"\n    let operation:string='addClient'\n    var data={\n      \"operation\":operation,\n      \"c\":c\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data.results) {\n          res=data.results\n        }\n        else {\n          res=null\n        }\n      }\n    })\n    return of(res);\n  }\n\n  deleteClient(no:string):Observable<boolean>{\n    let url=\"http://localhost:8080/Merchandising/ClientServlet\"\n    let operation:string='deleteClient'\n    var data={\n      \"operation\":operation,\n      \"no\":no\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data.results==true) {\n          res=of(true)\n        }\n        else {\n          res=of(false)\n        }\n      }\n    })\n    return res;\n  }\n\n  updateClient(c:Client):Observable<boolean>{\n    let url=\"http://localhost:8080/Merchandising/ClientServlet\"\n    let operation:string='updateClient'\n    var data={\n      \"operation\":operation,\n      \"c\":c\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data.results==true) {\n          res=of(true)\n        }\n        else {\n          res=of(false)\n        }\n      }\n    })\n    return res;\n  }\n\n  login(name:string,password:string):Observable<Client>{\n    let url=\"http://localhost:8080/Merchandising/ClientServlet\"\n    let operation:string='login'\n    var data={\n      \"operation\":operation,\n      \"name\":name,\n      \"password\":password\n    }\n    let res:any\n    $.ajax({\n      async:false, \n      type: \"post\",\n      url: url,\n      dataType: \"json\",\n      data: data,\n      success: function (data) {\n        if (data.results) {\n          res=data.results\n        }\n        else {\n          res=null\n        }\n      }\n    })\n    return of(res);\n  }\n}\n","\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Brand, Goods } from 'src/app/class';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BrandService } from 'src/app/server/brand.service';\nimport { SharedService } from 'src/app/server/shared.service';\n\n@Component({\n  selector: 'app-brand-detail',\n  templateUrl: './brand-detail.component.html',\n  styleUrls: ['./brand-detail.component.scss']\n})\nexport class BrandDetailComponent implements OnInit {\n\n  b:Brand;\n  brandForm: FormGroup;\n  constructor(\n    private route: ActivatedRoute,\n    private service: BrandService,\n    private location: Location,\n    private _formBuilder: FormBuilder,\n    private share:SharedService,\n  ) { }\n\n  ngOnInit(): void {\n    const name = this.route.snapshot.paramMap.get('name');\n    this.service.findBrandByName(name).subscribe((data)=>{\n      this.b=data;\n    })\n    this.brandForm = this._formBuilder.group({\n      name: [this.b.name],\n      url: [this.b.url, Validators.required],\n    });\n  }\n\n  save() {\n    alert(this.brandForm.get(\"dateTime\").value)\n  }\n  submit(): void {\n    this.add(this.brandForm.get('name').value, this.brandForm.get('url').value)\n  }\n  add(name: string, url: string) {\n    this.service.updateBrand({ name,url } as Brand).subscribe((data)=>{\n      if(data==true){\n        this.share.openSnackBar('修改成功','确定')\n        this.goBack()\n      }\n      else{\n        this.share.openSnackBar('修改失败','确定')\n      }\n        \n    })\n  }\n\n  delete(name:string){\n    if(confirm(\"确定删除该商品?\")){\n      this.service.deleteBrand(name).subscribe((data)=>{\n        if(data==true){\n          this.share.openSnackBar('删除成功','确定')\n          this.goBack()\n        }\n        else{\n          this.share.openSnackBar('删除失败','确定')\n        }\n      })\n    }\n\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<mat-card class=\"my-card z-depth-1 mb-2\">\n    <mat-card-header>\n        <div mat-card-avatar class=\"example-header-image\"></div>\n        <mat-card-title class=\"my-card-title\">品牌</mat-card-title>\n        <mat-card-subtitle>{{b.name}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content class=\"c1\">\n        <mat-accordion>\n            <mat-list>\n                <form [formGroup]='brandForm'>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>品牌名称</mat-label>\n                        <input matInput formControlName=\"name\" readonly >\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>品牌网站</mat-label>\n                        <input type=\"url\"  matInput formControlName=\"url\" >\n                        <mat-error>\n                            <span\n                                *ngIf=\"!brandForm.get('url').valid && brandForm.get('url').touched\">请输入网站</span>\n                        </mat-error>\n                    </mat-form-field>\n                </form> \n            </mat-list>\n\n        </mat-accordion>\n\n    </mat-card-content>\n    <mat-card-actions align=\"start\">\n        <button mat-button (click)=\"delete(b.name)\">\n            <mat-icon>delete</mat-icon> 删除\n        </button>\n        <button mat-button (click)=\"submit()\">\n            <mat-icon> edit</mat-icon>保存\n        </button>\n        <button mat-button (click)=\"goBack()\">\n            <mat-icon>undo</mat-icon> 返回\n        </button>\n    </mat-card-actions>\n</mat-card>","\nimport { Goods } from '../../class';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { BridgeService } from '../../server/bridge.service';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-good-list',\n  templateUrl: './good-list.component.html',\n  styleUrls: ['./good-list.component.scss']\n})\nexport class GoodListComponent implements OnInit {\n\n  selected: string=''\n\n  allBridges:Goods[]=[]\n  dataSource:MatTableDataSource<Goods>\n  displayedColumns: string[]=['编号','名称','类别','品牌名称','单位','市场价','销售价','成本价','商品介绍','库存']\n\n  private searchTerms = new Subject<string>();\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(\n    private bridgeService:BridgeService\n  ) { }\n  \n  ngOnInit(): void {\n    this.bridgeService.getAllGoods('').subscribe((data)=>{\n      this.allBridges=data;\n      this.dataSource=new MatTableDataSource<Goods>(this.allBridges);\n      this.dataSource.paginator = this.paginator;\n    })\n    this.searchTerms\n      .pipe(\n        // 在传出最终字符串之前，debounceTime(300) 将会等待，直到新增字符串的事件暂停了 300 毫秒\n        debounceTime(300),\n        // 确保只在过滤词变化时才发送请求\n        distinctUntilChanged(),\n        // 为每个从 debounce 和 distinctUntilChanged 中通过的搜索词调用搜索服务。\n        // 它会取消并丢弃以前的搜索可观察对象，只保留最近的\n        switchMap((term: string) => this.bridgeService.getAllGoods(term)),\n      )\n      .subscribe(( data  => { \n        this.allBridges=data;\n        this.dataSource=new MatTableDataSource<Goods>(this.allBridges);\n        this.dataSource.paginator = this.paginator;\n      }));\n  }\n\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n\n}\n","<div class=\"ml-3 mr-3 mt-1\">\n  <mat-toolbar color=\"primary\" class=\"bg\">\n    <a class=\"\" mat-button>\n      <mat-icon>home</mat-icon> 商品管理\n    </a>\n    <a class=\"mr-3\" mat-button>\n      <button mat-button routerLink=\"/good-add\"><mat-icon>add</mat-icon> 添加商品 </button>\n    </a>\n    <a class=\"mr-3\" mat-button>\n      <button mat-button routerLink=\"/sort-add\"><mat-icon>list</mat-icon> 添加分类 </button>\n    </a>\n    <span class=\"example-spacer\"></span>\n    <a class=\"mr-3\" mat-button>\n      <mat-icon>search</mat-icon> 查找\n      <mat-form-field>\n        <input matInput placeholder=\"查找内容\" #searchBox (input)=\"search(searchBox.value)\">\n      </mat-form-field>\n    </a>\n\n    <span class=\"spacer\"></span>\n    <div class=\"example-icon row\">\n    </div>\n  </mat-toolbar>\n  <mat-sidenav-container class=\"example-container\" autosize>\n    <mat-sidenav #drawer class=\"example-sidenav\" mode=\"side\">\n      <mat-action-list>\n        <button mat-list-item routerLink=\"/good-add\"> 添加商品 </button>\n        <button mat-list-item (click)=\"null\"> 日常巡检 </button>\n        <button mat-list-item (click)=\"null\"> 定期检测 </button>\n        <button mat-list-item (click)=\"null\"> 状况评估 </button>\n      </mat-action-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"example-sidenav-content\">\n      <div class=\"z-depth-2\">\n        <mat-table [dataSource]=\"dataSource\">\n          <ng-container matColumnDef=\"编号\">\n            <mat-header-cell *matHeaderCellDef class=\"\">编号</mat-header-cell>\n            <mat-cell *matCellDef=\"let row\"> {{row.no}} </mat-cell>\n          </ng-container>\n          <ng-container matColumnDef=\"品牌名称\">\n            <mat-header-cell *matHeaderCellDef class=\"\"><span> 品牌名称</span> </mat-header-cell>\n            <mat-cell *matCellDef=\"let row\"> {{row.bname}} </mat-cell>\n          </ng-container>\n          <ng-container matColumnDef=\"类别\">\n            <mat-header-cell *matHeaderCellDef class=\"\"><span> 类别</span> </mat-header-cell>\n            <mat-cell *matCellDef=\"let row\"> {{row.sort}} </mat-cell>\n          </ng-container>\n          <ng-container matColumnDef=\"名称\">\n            <mat-header-cell *matHeaderCellDef class=\"\"> 名称 </mat-header-cell>\n            <mat-cell *matCellDef=\"let row\"> {{row.name}} </mat-cell>\n          </ng-container>\n          <ng-container matColumnDef=\"单位\">\n            <mat-header-cell *matHeaderCellDef class=\"\"> 单位 </mat-header-cell>\n            <mat-cell *matCellDef=\"let row\"> {{row.unit}} </mat-cell>\n          </ng-container>\n          <ng-container matColumnDef=\"市场价\">\n            <mat-header-cell *matHeaderCellDef class=\"\"> 市场价 </mat-header-cell>\n            <mat-cell *matCellDef=\"let row\"> {{row.p1}} </mat-cell>\n          </ng-container>\n          <ng-container matColumnDef=\"销售价\">\n            <mat-header-cell *matHeaderCellDef class=\"\"> 销售价 </mat-header-cell>\n            <mat-cell *matCellDef=\"let row\"> {{row.p2}} </mat-cell>\n          </ng-container>\n          <ng-container matColumnDef=\"成本价\">\n            <mat-header-cell *matHeaderCellDef class=\"\"> 成本价 </mat-header-cell>\n            <mat-cell *matCellDef=\"let row\"> {{row.p3}} </mat-cell>\n          </ng-container>\n          <ng-container matColumnDef=\"商品介绍\">\n            <mat-header-cell *matHeaderCellDef class=\"\"> 商品介绍 </mat-header-cell>\n            <mat-cell *matCellDef=\"let row\"> {{row.introduction}} </mat-cell>\n          </ng-container>\n          <ng-container matColumnDef=\"库存\">\n            <mat-header-cell *matHeaderCellDef class=\"\">库存 </mat-header-cell>\n            <mat-cell *matCellDef=\"let row\"> {{row.stock}} </mat-cell>\n          </ng-container>\n          <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n          <mat-row class=\"hoverable\" *matRowDef=\"let row; columns: displayedColumns;\"\n            [routerLink]=\"['/good-detail/', row.no]\">\n          </mat-row>\n        </mat-table>\n      </div>\n      <mat-paginator [length]=10 [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n\n</div>","<div >\n    <button mat-flat-button (click)=\"goBack()\" color=\"primary\" class=\"mt-2 ml-2\">返回</button>\n    <mat-card class=\"c\">\n        <mat-card-header>\n            <mat-card-title>\n                订单详情\n            </mat-card-title>\n            <mat-card-subtitle>订单编号: {{order.no}}</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n            <form [formGroup]=\"orderFrom\">\n                <mat-form-field class=\"c1\">\n                    <mat-label>客户</mat-label>\n                    <input matInput readonly formControlName=\"cname\">\n                    <mat-icon matSuffix>person</mat-icon>\n                </mat-form-field>\n                <mat-form-field class=\"c1\">\n                    <mat-label>地址</mat-label>\n                    <input matInput readonly formControlName='postcode'>\n                    <mat-icon matSuffix>house</mat-icon>\n                </mat-form-field>\n                <mat-form-field class=\"c1\">\n                    <mat-label>时间</mat-label>\n                    <input type=\"datetime\" readonly matInput  formControlName='date'>\n                    <mat-icon matSuffix>date_range</mat-icon>\n                </mat-form-field>\n                <mat-form-field class=\"c1\">\n                    <mat-label>总价</mat-label>\n                    <input matInput type=\"number\" readonly formControlName='amount'>\n                    <mat-icon matSuffix>paid</mat-icon>\n                </mat-form-field>\n            </form>\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">名称</th>\n                      <th scope=\"col\">数量</th>\n                      <th scope=\"col\">金额</th>\n                    </tr>\n                  </thead>\n                  <tbody *ngFor=\"let t of orderDetail let i=index\">\n                    <tr *ngIf=\"t.no\">\n                        <th scope=\"row\">{{i}}</th>\n                        <td>{{goods[i].name}}</td>\n                        <td>×{{t.n}}</td>\n                        <td>{{t.amount}}</td>\n                    </tr>\n                  </tbody>\n            </table>\n        </mat-card-content>\n    </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Client, Goods, Order, OrderDetail } from 'src/app/class';\nimport { OrderService } from 'src/app/server/order.service';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BridgeService } from 'src/app/server/bridge.service';\nimport { ClientService } from 'src/app/server/client.service';\n\n@Component({\n  selector: 'app-order-detail',\n  templateUrl: './order-detail.component.html',\n  styleUrls: ['./order-detail.component.scss']\n})\nexport class OrderDetailComponent implements OnInit {\n\n  order: Order\n  orderDetail: OrderDetail[] = []\n  goods: Goods[] = []\n  client: Client\n  orderFrom: FormGroup\n  constructor(\n    private orderS: OrderService,\n    private goodS: BridgeService,\n    private clientS: ClientService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private formBuilder: FormBuilder,\n  ) { }\n\n  ngOnInit(): void {\n    this.get()\n    this.orderFrom = this.formBuilder.group({\n      cname: [this.client.name],\n      postcode: [this.order.postcode],\n      date: [this.order.date.slice(0, 19)],\n      amount: [this.order.amount]\n    })\n  }\n\n  get() {\n    const no = this.route.snapshot.paramMap.get('no');\n\n    this.orderS.findOrderByNo(no).subscribe((data) => {\n      this.order = data;\n    })\n    this.orderS.getOrderDetailByNo(no).subscribe((data) => {\n      this.orderDetail = data;\n    })\n    this.clientS.findClientByNo(this.order.cNo).subscribe((data) => {\n      this.client = data;\n    })\n    for (let t of this.orderDetail) {\n      this.goodS.findGoodByNo(t.gNo).subscribe((data) => {\n        this.goods.push(data)\n      })\n    }\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n}\n","\n\n\n\nimport { Bridge,MonitoringContent } from '../../class';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { BridgeService } from '../../server/bridge.service';\nimport { MatPaginator } from '@angular/material/paginator';\n\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { MatSort } from '@angular/material/sort';\n\n\n@Component({\n  selector: 'app-bridge-detail',\n  templateUrl: './bridge-detail.component.html',\n  styleUrls: ['./bridge-detail.component.scss']\n})\nexport class BridgeDetailComponent implements OnInit {\n\n  bridge:Bridge\n  monitoringContent:MonitoringContent[]=[]\n  dataSource:MatTableDataSource<MonitoringContent>\n  displayedColumns: string[]\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private bridgeService: BridgeService,\n    private location: Location,\n    ) { }\n\n  ngOnInit() {\n    this.getBridge();\n    // this.getMonitoringContentByNo();\n  }\n\n  getBridge(): void {\n    const no = this.route.snapshot.paramMap.get('no');\n    this.bridgeService.getBridgeByNo(no).subscribe((data)=>{\n      this.bridge=data;\n      this.getMonitoringContentByNo()\n    })\n   \n  }\n\n  getMonitoringContentByNo():void{\n    const no = this.route.snapshot.paramMap.get('no');\n\n    this.displayedColumns=this.bridgeService.getColOfBridgeMonitoring(this.bridge.bridgeTypeNo)\n    this.bridgeService.getMonitoringContentByBridgeNo(no).subscribe((data)=>{\n      this.monitoringContent=data;\n      this.dataSource=new MatTableDataSource<MonitoringContent>(this.monitoringContent)\n      this.dataSource.paginator=this.paginator\n    })\n   \n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n\n","<div>\n  <mat-card class=\"my-card z-depth-1 mb-2\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title class=\"my-card-title\">{{bridge.bridgeName}}</mat-card-title>\n      <mat-card-subtitle>{{bridge.bridgeNo}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content class=\"c1\">\n      <mat-accordion>\n        <mat-expansion-panel >\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              基本信息\n            </mat-panel-title>\n            <mat-panel-description>\n              Basic Information\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <mat-list>\n            <mat-list-item>\n              桥梁类型编号： {{bridge.bridgeTypeNo}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              建成日期： {{bridge.dateTime}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              管理单位：{{bridge.managementUnit}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              总造价： {{bridge.cost}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              桥梁等级： {{bridge.bridgeLevel}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              跨越长度 ：{{bridge.length}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              跨越宽度： {{bridge.wide}}\n            </mat-list-item>\n          </mat-list>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel >\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              其他信息\n            </mat-panel-title>\n            <mat-panel-description>\n              Other Information\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <mat-list>\n            <mat-list-item>\n              人行道净宽： {{bridge.sideWalkLength}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              车行道净宽： {{bridge.roadWayLength}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              栏杆总长：{{bridge.railingLength}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              伸缩缝型式：{{bridge.expansionJointType}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              伸缩缝数量 ：{{bridge.expansionJointNumber}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              桥墩标高： {{bridge.pierElevation}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              盖梁尺寸：{{bridge.cappingBeamSize}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              基底标高 ：{{bridge.basalElevation}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              底板尺寸：{{bridge.floorSize}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              桥台数量：{{bridge.abutmentNumber}}\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n              桥台标高：{{bridge.abutmentElevation}}\n            </mat-list-item>\n          </mat-list>\n        </mat-expansion-panel>\n       \n      </mat-accordion>\n\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n      <button mat-button routerLink=\"/bridge-detail/{{bridge.bridgeNo}}\"> <mat-icon>edit</mat-icon>  编辑</button>\n      <button mat-button> <mat-icon>undo</mat-icon>  返回</button>\n    </mat-card-actions>\n  </mat-card>\n\n  <div class=\"c1 z-depth-2\">\n    <mat-table  matSort [dataSource]=\"dataSource\">\n      <ng-container matColumnDef=\"类型\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg size\"> 类型 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\" > {{row.no[0]=='D'?'定期':'日常'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"编号\">\n        <mat-header-cell *matHeaderCellDef  mat-sort-header class=\"bg size\"> 编号 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\" class=\"size\"> {{row.no}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"桥名牌\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg text-align:center\"> 桥名牌 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\" class=\"\">{{row.bridgeBoard?row.bridgeBoard:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"桥面铺装\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 桥面铺装 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.bridgeDeckPavement?row.bridgeDeckPavement:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"伸缩装置\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 伸缩装置 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.telescopicDevice?row.telescopicDevice:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"排水设施\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 排水设施 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.drainageFacilities?row.drainageFacilities:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"人行道\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 人行道 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.sideWalk?row.sideWalk:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"栏杆护栏\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 栏杆护栏 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.railing?row.railing:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"主梁\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 主梁 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.mainBeam?row.mainBeam:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"桁梁\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 桁梁 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.trussGirder?row.trussGirder:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"横梁\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 横梁 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.beam?row.beam:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"横向连接\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 横向连接 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.transverseConnection?row.transverseConnection:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"主节点\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 主节点 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.masterNode?row.masterNode:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"连接件\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 连接件 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.connector?row.connector:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"支座\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 支座 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.support?row.support:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"盖梁\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 盖梁 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.cappingBeam?row.cappingBeam:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"墩身\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 墩身 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.pierShaft?row.pierShaft:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"台帽\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 台帽 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.tableCap?row.tableCap:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"台身\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 台身 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.platformBody?row.platformBody:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"耳墙\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 耳墙 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.earWall?row.earWall:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"基础\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 基础 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.base?row.base:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"河床冲刷情况\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 河床冲刷情况 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.riverBedScouring?row.riverBedScouring:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"地下通道及附属设施\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg\"> 地下通道 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.undergroundPassage?row.undergroundPassage:'无'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"外部装饰板\">\n        <mat-header-cell *matHeaderCellDef  class=\"bg \"> 外部装饰板 </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\">{{row.exteriorTrimPanel?ow.exteriorTrimPanel:'无'}}\n          <!-- <a class=\"btn btn-sm btn-info my-0 mr-3 hoverable\" routerLink=\"/hero-detail/{{row.id}}\">\n            <i class=\"fa fa-edit\"> 编辑</i>\n          </a>\n          <button type=\"button\" class=\"btn btn-sm btn-danger hoverable\" (click)=\"delete(row.id)\">\n            <i class=\"fa fa-trash\"> 删除</i>\n          </button> -->\n        </mat-cell>\n      </ng-container>\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row class=\"hoverable\" *matRowDef=\"let row; columns: displayedColumns;\">\n      </mat-row>>\n    </mat-table>\n    <mat-paginator [length]=10 [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n  </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroupDirective, FormGroup, NgForm, Validator, Validators } from '@angular/forms';\nimport { getLocaleTimeFormat, Location } from '@angular/common';\nimport { Order } from 'src/app/class';\nimport { OrderService } from 'src/app/server/order.service';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { SharedService } from 'src/app/server/shared.service';\n\n@Component({\n    selector: 'app-order-add',\n    templateUrl: './order-add.component.html',\n    styleUrls: ['./order-add.component.scss']\n})\nexport class OrderAddComponent implements OnInit {\n\n    orderForm: FormGroup;\n\n\n    constructor(\n        private _formBuilder: FormBuilder,\n        private service: OrderService,\n        private location: Location,\n        private route: ActivatedRoute,\n        private share:SharedService,\n    ) { }\n    ngOnInit() {\n        const cNo = this.route.snapshot.paramMap.get('cNo');\n        const amount = this.route.snapshot.paramMap.get('amount');\n        const no=this.createNo();\n        this.orderForm = this._formBuilder.group({\n            no: [no],\n            cNo:[cNo],\n            postcode: ['', Validators.required],\n            date: [new Date().getDate, Validators.required],\n            amount: [amount, Validators.required],\n        });\n\n    }\n\n    submit(): void {\n        this.add(this.orderForm.get('no').value, \n        this.orderForm.get('cNo').value, \n        this.orderForm.get('postcode').value, \n        this.orderForm.get('date').value,\n        Number.parseFloat(this.orderForm.get('amount').value))\n    }\n    add(no: string, cNo: string, postcode: string, date: string,amount:number) {\n        this.service.addOrder({ no, cNo, postcode, date,amount } as Order).subscribe((data) => {\n            if (data == true) {\n                this.share.openSnackBar('添加成功','')\n                this.goBack()\n            }\n            else {\n                this.share.openSnackBar('添加失败','确定')\n            }\n\n        })\n    }\n    createNo():string{\n        let date = new Date();\n        let n = String.fromCharCode((Math.floor(Math.random() * 26)) + 65);\n        let No: string = 'D'+n + date.getFullYear();\n        if ((date.getMonth()) >= 9)\n            No += date.getMonth() + 1;\n        else\n            No += \"0\" + (date.getMonth() + 1);\n        if (date.getDate() >= 10)\n            No += date.getDate();\n        else\n            No += \"0\" + (date.getDate());\n        if (date.getHours() >= 10)\n            No += date.getHours();\n        else\n            No += \"0\" + (date.getHours())\n        if (date.getMinutes() >= 10)\n            No += date.getMinutes();\n        else\n            No += \"0\" + (date.getMinutes())\n        if (date.getSeconds() >= 10)\n            No += date.getSeconds();\n        else\n            No += \"0\" + date.getSeconds();\n            return No\n    }\n\n\n\n    goBack(): void {\n        this.location.back();\n    }\n\n}\n","<div class=\"container\">\n    <!-- <mat-form-field appearance=\"fill\">\n        <mat-label>Input</mat-label>\n        <input matInput>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Select</mat-label>\n        <mat-select>\n            <mat-option value=\"one\">First option</mat-option>\n            <mat-option value=\"two\">Second option</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Textarea</mat-label>\n        <textarea matInput></textarea>\n    </mat-form-field> -->\n\n    <mat-card class=\"card\">\n        <form [formGroup]='orderForm'>\n            <mat-form-field class=\"c2\">\n                <mat-label>订单编号</mat-label>\n                <input  matInput formControlName=\"no\" readonly>\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label>客户号</mat-label>\n                <input matInput formControlName=\"name\" readonly>\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label>邮编</mat-label>\n                <input   matInput formControlName=\"postcode\" >\n                <mat-error>\n                    <span\n                        *ngIf=\"!orderForm.get('postcode').valid && orderForm.get('postcode').touched\">请输入网站</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label>订购日期</mat-label>\n                <input type=\"datetime\"  matInput formControlName=\"date\" readonly >\n            </mat-form-field>\n            <mat-form-field class=\"c2\">\n                <mat-label>金额</mat-label>\n                <input type=\"number\"  matInput formControlName=\"amount\" readonly >\n            </mat-form-field>\n        </form> \n        <button mat-button [disabled]=\"!orderForm.valid\" (click)=\"submit()\"><mat-icon>done</mat-icon>提交</button>\n        <button mat-button (click)=\"goBack()\"> <mat-icon>arrow_back_ios_new</mat-icon>返回</button>\n    </mat-card>\n\n</div>","import { Brand, Client} from '../../class';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ClientService } from 'src/app/server/client.service';\n\n\n@Component({\n  selector: 'app-client-list',\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.scss']\n})\nexport class ClientListComponent implements OnInit {\n\n  allClient:Client[]=[]\n  dataSource:MatTableDataSource<Client>\n  displayedColumns: string[]=['客户号','客户姓名','客户地址','客户电话']\n\n  private searchTerms = new Subject<string>();\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(\n    private service:ClientService\n  ) { }\n  \n  ngOnInit(): void {\n    this.service.getAllClient().subscribe((data)=>{\n      this.allClient=data;\n      this.dataSource=new MatTableDataSource<Client>(this.allClient);\n      this.dataSource.paginator = this.paginator;\n    })\n    this.searchTerms\n      .pipe(\n        // 在传出最终字符串之前，debounceTime(300) 将会等待，直到新增字符串的事件暂停了 300 毫秒\n        debounceTime(300),\n        // 确保只在过滤词变化时才发送请求\n        distinctUntilChanged(),\n        // 为每个从 debounce 和 distinctUntilChanged 中通过的搜索词调用搜索服务。\n        // 它会取消并丢弃以前的搜索可观察对象，只保留最近的\n        switchMap((term: string) => this.service.getClients(term)),\n      )\n      .subscribe(( data  => { \n        this.allClient=data;\n        this.dataSource=new MatTableDataSource<Client>(this.allClient);\n        this.dataSource.paginator = this.paginator;\n      }));\n  }\n\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n}\n","<div class=\"ml-3 mr-3 mt-1\">\n  <mat-toolbar color=\"primary\" class=\"bg\">\n    <a class=\"\" mat-button>\n      <mat-icon>home</mat-icon> 客户管理\n    </a>\n    <span class=\"example-spacer\"></span>\n    <a class=\"mr-3\" mat-button>\n      <mat-icon>search</mat-icon> 查找\n      <mat-form-field>\n        <input matInput placeholder=\"查找内容\" #searchBox (input)=\"search(searchBox.value)\">\n      </mat-form-field>\n    </a>\n  </mat-toolbar>\n  <mat-sidenav-container class=\"example-container\" autosize>\n    <mat-sidenav #drawer class=\"example-sidenav\" mode=\"side\">\n      <mat-action-list>\n        <button mat-list-item routerLink=\"/brand-add\"> 添加商品 </button>\n        <button mat-list-item (click)=\"null\"> 日常巡检 </button>\n        <button mat-list-item (click)=\"null\"> 定期检测 </button>\n        <button mat-list-item (click)=\"null\"> 状况评估 </button>\n      </mat-action-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"example-sidenav-content\">\n      <div class=\"z-depth-2\">\n        <mat-table [dataSource]=\"dataSource\">\n          <ng-container matColumnDef=\"客户号\">\n            <mat-header-cell *matHeaderCellDef class=\"\">客户号</mat-header-cell>\n            <mat-cell *matCellDef=\"let row\"> {{row.no}} </mat-cell>\n          </ng-container>\n          <ng-container matColumnDef=\"客户姓名\">\n            <mat-header-cell *matHeaderCellDef class=\"\"><span> 客户姓名</span> </mat-header-cell>\n            <mat-cell *matCellDef=\"let row\"> {{row.name}} </mat-cell>\n          </ng-container>\n          <ng-container matColumnDef=\"客户地址\">\n            <mat-header-cell *matHeaderCellDef class=\"\"><span> 客户地址</span> </mat-header-cell>\n            <mat-cell *matCellDef=\"let row\"> {{row.address}} </mat-cell>\n          </ng-container>\n          <ng-container matColumnDef=\"客户电话\">\n            <mat-header-cell *matHeaderCellDef class=\"\"><span> 客户电话</span> </mat-header-cell>\n            <mat-cell *matCellDef=\"let row\"> {{row.tNumber}} </mat-cell>\n          </ng-container>\n          <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n          <mat-row class=\"hoverable\" *matRowDef=\"let row; columns: displayedColumns;\"\n            [routerLink]=\"['/client-detail/', row.no]\">\n          </mat-row>\n        </mat-table>\n      </div>\n      <mat-paginator [length]=10 [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n\n</div>","\nimport { HeroAddComponent } from './components/hero-add/hero-add.component';\nimport { HeroTopComponent } from './components/hero-top/hero-top.component';\nimport { HeroListComponent } from './components/hero-list/hero-list.component';\nimport { BridgeDetailComponent } from './components/bridge-detail/bridge-detail.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { HeroSearchComponent } from './components/hero-search/hero-search.component';\nimport {ReportComponent} from './components/report/report.component'\nimport { BridgeListComponent } from './components/bridge-list/bridge-list.component';\nimport { BridgeAddComponent } from './components/bridge-add/bridge-add.component';\nimport { GoodListComponent } from './components/good-list/good-list.component';\nimport { GoodAddComponent } from './components/good-add/good-add.component';\nimport { GoodDetailComponent } from './components/good-detail/good-detail.component';\nimport { BrandListComponent } from './components/brand-list/brand-list.component';\nimport { BrandDetailComponent } from './components/brand-detail/brand-detail.component';\nimport { BrandAddComponent } from './components/brand-add/brand-add.component';\nimport { ClientListComponent } from './components/client-list/client-list.component';\nimport { ClientAddComponent } from './components/client-add/client-add.component';\nimport { ClientDetailComponent } from './components/client-detail/client-detail.component';\nimport { OrderDetailComponent } from './components/order-detail/order-detail.component';\nimport { OrderAddComponent } from './components/order-add/order-add.component';\nimport { OrderListComponent } from './components/order-list/order-list.component';\nimport { BuyComponent } from './components/buy/buy.component';\nimport { CarComponent } from './components/car/car.component';\nimport { SortAddComponent } from './components/sort-add/sort-add.component';\nimport { UserComponent } from './components/user/user.component';\nimport { LoginGuard } from 'src/app/components/user/login.guard';\nconst routes: Routes = [\n  { path: '', redirectTo: '', pathMatch: 'full'  },\n  { path: 'home',component:HeroListComponent },\n  // { path: 'hero-list/:type', component: HeroListComponent,runGuardsAndResolvers:'paramsChange' },\n  // { path: 'hero-top', component: HeroTopComponent},\n  // { path: 'hero-detail/:no', component: BridgeDetailComponent},\n  // { path: 'hero-add', component: HeroAddComponent},\n  // { path: 'hero-search', component:HeroSearchComponent},\n  // { path: 'report',component:ReportComponent},\n  // { path: 'bridge-list',component:BridgeListComponent},\n  // { path: 'bridge-detail/:no',component:BridgeDetailComponent},\n  // { path: 'bridge-add',component:BridgeAddComponent},\n  {path: 'user',component:UserComponent},\n  {path: 'good-list',component:GoodListComponent ,canActivate: [LoginGuard]},\n  {path: 'good-add',component:GoodAddComponent,canActivate: [LoginGuard]},\n  {path: 'good-detail/:no',component:GoodDetailComponent,canActivate: [LoginGuard]},\n  {path: 'brand-list',component:BrandListComponent,canActivate: [LoginGuard]},\n  {path: 'brand-detail/:name',component:BrandDetailComponent,canActivate: [LoginGuard]},\n  {path: 'brand-add',component:BrandAddComponent,canActivate: [LoginGuard]},\n  {path: 'client-list',component:ClientListComponent,canActivate: [LoginGuard]},\n  {path: 'client-add',component:ClientAddComponent},\n  {path: 'client-detail/:no',component:ClientDetailComponent,canActivate: [LoginGuard]},\n  {path: 'order-list',component:OrderListComponent,canActivate: [LoginGuard]},\n  {path: 'order-add/:no/:amount',component:OrderAddComponent,canActivate: [LoginGuard]},\n  {path: 'order-detail/:no',component:OrderDetailComponent,canActivate: [LoginGuard]},\n  {path: 'buy',component:BuyComponent,canActivate: [LoginGuard]},\n  {path: 'car',component:CarComponent,canActivate: [LoginGuard]},\n  {path: 'sort-add',component:SortAddComponent,canActivate: [LoginGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(\n    routes,\n    { onSameUrlNavigation: 'reload',enableTracing: true }\n  )],\n  exports: [ RouterModule  ]\n})\nexport class AppRoutingModule { \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BridgeService } from '../../server/bridge.service';\nimport { Location } from '@angular/common';\ninterface Bridge1 {\n  no: string,\n  name: string\n}\n@Component({\n  selector: 'app-bridge-add',\n  templateUrl: './bridge-add.component.html',\n  styleUrls: ['./bridge-add.component.scss']\n})\nexport class BridgeAddComponent implements OnInit {\n  selected: string = ''\n  BridgeNo: Bridge1[] = []\n  bridgeForm: FormGroup;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  constructor(\n    private _formBuilder: FormBuilder,\n    private bridgeService: BridgeService,\n    private location: Location,\n  ) { }\n  ngOnInit() {\n    this.getAllType();\n    this.bridgeForm = this._formBuilder.group({\n      bridgeName: ['', Validators.required],\n      dateTime: ['', Validators.required],\n      managementUnit: ['', Validators.required],\n      bridgeLevel: ['', Validators.required],\n      cost: ['', Validators.required],\n    });\n    this.firstFormGroup = this._formBuilder.group({\n      bridgeTypeNo: ['', Validators.required],\n    });\n    this.secondFormGroup = this._formBuilder.group({\n     // secondCtrl: ['', Validators.required],\n      expansionJointType: [''],\n      sideWalkLength: [''],\n      roadWayLength: [''],\n      railingLength: [''],\n      pierElevation: [''],\n      cappingBeamSize: [''],\n      basalElevation: [''],\n      floorSize: [''],\n      abutmentElevation: [''],\n      abutmentNumber: [''],\n      expansionJointNumber: [''],\n      length: [''],\n      wide: [''],\n    });\n  }\n\n  getAllType() {\n    let tmp = this.bridgeService.getAllBridgeType();\n    for (let i of tmp) {\n      let s = i.split(\":\");\n      let b: Bridge1 = {\n        no: s[0],\n        name: s[1]\n      }\n      this.BridgeNo.push(b)\n    }\n  }\n  save(){\n    alert(this.bridgeForm.get(\"dateTime\").value)\n  }\n  goBack(): void {\n    this.location.back();\n  }\n}\n","<div class=\"container\">\n    <!-- <mat-form-field appearance=\"fill\">\n        <mat-label>Input</mat-label>\n        <input matInput>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Select</mat-label>\n        <mat-select>\n            <mat-option value=\"one\">First option</mat-option>\n            <mat-option value=\"two\">Second option</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Textarea</mat-label>\n        <textarea matInput></textarea>\n    </mat-form-field> -->\n    <mat-card class=\"card\">\n        <button mat-button (click)=\"goBack()\"> 返回</button>\n        <mat-vertical-stepper [linear]=\"true\" #stepper>\n            <mat-step [stepControl]=\"firstFormGroup\">\n                <form [formGroup]=\"firstFormGroup\">\n                    <ng-template matStepLabel>选择桥梁类型</ng-template>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>桥梁类型</mat-label>\n                        <mat-select [(value)]=\"selected\" formControlName=\"bridgeTypeNo\" required>\n                            <mat-option *ngFor=\"let Bridge of BridgeNo\" [value]=\"Bridge.no\">\n                                {{Bridge.name}}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>\n                            <span *ngIf=\"!firstFormGroup.get('bridgeTypeNo').value\">请选择类型</span>\n                        </mat-error>\n                    </mat-form-field>\n                    <div>\n                        <button mat-button matStepperNext>下一步</button>\n                    </div>\n                </form>\n            </mat-step>\n            <mat-step [stepControl]=\"bridgeForm\">\n                <form [formGroup]=\"bridgeForm\">\n                    <ng-template matStepLabel>桥梁基本信息</ng-template>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>名称</mat-label>\n                        <input matInput formControlName=\"bridgeName\" required>\n                        <mat-error>\n                            <span\n                                *ngIf=\"!bridgeForm.get('bridgeName').valid && bridgeForm.get('bridgeName').touched\">请输入名称</span>\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field class=\"c2\">\n                        <mat-label>建成日期</mat-label>\n                        <input matInput [matDatepicker]=\"picker\" formControlName=\"dateTime\" required>\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\">\n                        </mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n                        <mat-error>\n                            <span\n                                *ngIf=\"!bridgeForm.get('dateTime').valid && bridgeForm.get('dateTime').touched\">请输入日期</span>\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field class=\"c2\">\n                        <mat-label>管理单位</mat-label>\n                        <input matInput formControlName=\"managementUnit\" required>\n                        <mat-error>\n                            <span\n                                *ngIf=\"!bridgeForm.get('managementUnit').valid && bridgeForm.get('managementUnit').touched\">请输入管理单位</span>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>桥梁等级</mat-label>\n                        <mat-select  formControlName=\"bridgeLevel\" required>\n                            <mat-option *ngFor=\"let l of [1,2,3,4,5]\" [value]=\"l\">\n                               {{l}}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>\n                            <span\n                                *ngIf=\"!bridgeForm.get('bridgeLevel').valid && bridgeForm.get('bridgeLevel').touched\">请选择等级</span>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>造价</mat-label>\n                        <input matInput formControlName=\"cost\" required>\n                        <mat-error>\n                            <span\n                                *ngIf=\"!bridgeForm.get('cost').valid && bridgeForm.get('cost').touched\">请输入名称</span>\n                        </mat-error>\n                    </mat-form-field>\n                    <div>\n                        <button mat-button matStepperPrevious>上一步</button>\n                        <button mat-button matStepperNext>下一步</button>\n                    </div>\n                </form>\n            </mat-step>\n            <mat-step [stepControl]=\"secondFormGroup\">\n                <form [formGroup]=\"secondFormGroup\">\n                    <ng-template matStepLabel>桥梁其他信息</ng-template>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>伸缩缝型式</mat-label>\n                        <input matInput formControlName=\"expansionJointType\">\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>人行道净宽</mat-label>\n                        <input matInput formControlName=\"sideWalkLength\">\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>车行道净宽</mat-label>\n                        <input matInput formControlName=\"roadWayLength\">\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>栏杆总长</mat-label>\n                        <input matInput formControlName=\"railingLength\">\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>桥墩标高</mat-label>\n                        <input matInput formControlName=\"pierElevation\">\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>盖梁尺寸</mat-label>\n                        <input matInput formControlName=\"cappingBeamSize\">\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>基底标高</mat-label>\n                        <input matInput formControlName=\"basalElevation\">\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>底板尺寸</mat-label>\n                        <input matInput formControlName=\"floorSize\">\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>桥台标高</mat-label>\n                        <input matInput formControlName=\"abutmentElevation\">\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>桥台数量</mat-label>\n                        <input matInput formControlName=\"abutmentNumber\">\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>伸缩缝数量</mat-label>\n                        <input matInput formControlName=\"expansionJointNumber\">\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>跨越长度</mat-label>\n                        <input matInput formControlName=\"length\">\n                    </mat-form-field>\n                    <mat-form-field class=\"c2\">\n                        <mat-label>跨越宽度</mat-label>\n                        <input matInput formControlName=\"wide\">\n                    </mat-form-field>\n                    <div>\n                        <button mat-button matStepperPrevious>上一步</button>\n                        <button mat-button matStepperNext>下一步</button>\n                    </div>\n                </form>\n            </mat-step>\n            <mat-step>\n                <ng-template matStepLabel>检查</ng-template>\n                <p>请确认以下信息</p>\n                <div>\n                    <button mat-button matStepperPrevious>上一步</button>\n                    <button mat-button (click)=\"save()\">确定</button>\n                    <button mat-button (click)=\"stepper.reset()\">重写</button>\n                </div>\n            </mat-step>\n        </mat-vertical-stepper>\n    </mat-card>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ClientService } from '../../server/client.service';\nimport { SharedService } from 'src/app/server/shared.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n  loginForm: FormGroup;\n  hide = true;\n  constructor(\n    private loginService: ClientService,\n    private sharedService: SharedService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: [''],\n      password: ['',[Validators.required,Validators.maxLength(16)]],\n      // role: [ROLES.TEACHER],\n    });\n  }\n  // 登录如果有错，则被全局错误拦截并显示错误信息，此次是登录成功的处理\n  // 下面data的写法请注意不能错： ({ data })\n  login() {\n    this.loginService.login(this.loginForm.get('username').value,this.loginForm.get('password').value).subscribe( ( data )  => {\n      const client = data;\n      if (client) {\n        this.sharedService.loginedConfig(this.loginForm.value.username, client);\n      }\n      else{ \n        this.sharedService.openSnackBar('账号或密码错误!','')\n      }\n    });\n  }\n\n  \n  logout() {\n    this.sharedService.logoutConfig();\n  }\n\n}\n","<mat-card class=\"c\">\n    <mat-card-title>\n        <mat-icon color=\"primary\" >account_circle</mat-icon>\n        <!-- 登 录 -->\n    </mat-card-title>\n\n    <mat-card-content>\n        <form [formGroup]=\"loginForm\">\n            <mat-form-field class=\"c1\" appearance=\"standard\">\n                <mat-label>用户名</mat-label>\n                <input  matInput formControlName=\"username\" placeholder=\"客户号或手机号\" required>\n                <mat-icon matSuffix></mat-icon>\n                <mat-error>\n                    <span *ngIf=\"!loginForm.get('username').valid && loginForm.get('username').touched\">请输入用户名</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"c1\">\n                <mat-label>密码</mat-label>\n                <input matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"密码\" formControlName=\"password\" required>\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-pressed]=\"hide\">\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n                <mat-error>\n                    <span *ngIf=\"!loginForm.get('password').valid && loginForm.get('password').touched\">请输入密码</span>\n                </mat-error>\n            </mat-form-field>\n\n           \n        </form>\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <button  class=\"ml-5 mr-5\" mat-flat-button color=\"primary\" routerLink=\"/client-add\" >\n                    注册<mat-icon >exit_to_app</mat-icon>\n                </button>\n            </div>\n            <div class=\"col-6\">\n                <button class=\"mr-5 ml-5\" mat-flat-button color=\"primary\" (click)=\"login()\" [disabled]=\"!loginForm.valid\">\n                    登录<mat-icon >exit_to_app</mat-icon>\n                </button>\n            </div>\n            \n        </div>\n        \n    </mat-card-content>\n</mat-card>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}